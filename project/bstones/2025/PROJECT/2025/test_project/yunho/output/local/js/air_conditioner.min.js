(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
module.exports={ 
   "modelSlideCom": {
      "gallery": [
         {"imgPc":"wac_model_gallery01_pc", "imgMo":"wac_model_gallery01_mo", "alt":"신제품 무풍갤러리 제품", 
         "blind":"BESPOKE AI 무풍 갤러리 AF18DX839··· 3D 와이드 무풍 AI 에너지 절약 Bixby Care"},
         {"imgPc":"wac_model_gallery02_pc", "imgMo":"wac_model_gallery02_mo", "alt":"우측에는 신제품 무풍갤러리의 클로즈업 샷, 좌측에는 무풍홀을 클로즈업한 이미지가 배치됨", 
         "blind":"직바람/소음 걱정 없는 3D 와이드 무풍"},
         {"imgPc":"wac_model_gallery03_pc", "imgMo":"wac_model_gallery03_mo", "alt":"배경 좌측에는 신제품 무풍갤러리 스탠드형이 배치되어 있고, 배경 우측에는 식탁과 의자가 배치되어 있으며 그 위호 스마트폰 화면을 통해 에너지 사용량을 확인하는 이미지가 올려져 있음", 
         "blind":"상황에 맞게 전기료 관리해주는 AI 에너지 절약"},
         {"imgPc":"wac_model_gallery04_pc", "imgMo":"wac_model_gallery04_mo", "alt":"실내 거실 배경이며 좌측에는 벽걸이 TV와 TV장, 바닥에는 제트봇이 돌아다니고 있으며 TV를 마주보고 소파와 협탁이 배치되어 있고, 협탁위에는 화분이 놓여 있고, 뒤쪽 테라스에는 1인용 소파가 배치되어 있고 우측에는 제품 클로즈업 샷이 배치되어 있음", 
         "blind":"움직이지 않고 편하게, AI 집사가 알아서 관리하는 Bixby Care"},
         {"imgPc":"wac_model_gallery05_pc", "imgMo":"wac_model_gallery05_mo", "alt":"실내 인테리어컷으로 좌측애는 무풍갤러리 스탠드 제품이, 우측 하단에는 회색 소파가 배치되어 있으며, 우측에는 냉방운전 시뮬레이터의 On 상태와 Off 상태를 비교하는 실험 이미지가 배치되어 있음", 
         "blind":"사각지대 걱정 없이 빠르게 하이패스 서큘 냉방"}
      ],
      "classic": [
         {"imgPc":"wac_model_classic01_pc", "imgMo":"wac_model_classic01_mo", "alt":"무풍클래식 제품", 
         "blind":"무풍에어컨 클래식 AF18B9937···  |  AF17C7932··· 직바람 없는 무풍냉방 하이패스 회오리 냉방 이지케어 5단계"},
         {"imgPc":"wac_model_classic02_pc", "imgMo":"wac_model_classic02_mo", "alt":"실내 인테리어 컷이며 좌측에는 무풍클래식 제품, 우측에는 연한 청록색의 소파가 놓여 있으며, 중앙 하단에는 화분이 올려져있는 협탁이 배치되어 있고 무풍클래식 제품 좌측으로는 BESPOKE 디자인의 다양한 색상이 예시로 배치되어 있음", 
         "blind":"직바람 없는 무풍으로 소비전력 최대 90% 절약하는 무풍냉방"},
         {"imgPc":"wac_model_classic03_pc", "imgMo":"wac_model_classic03_mo", "alt":"실내 인테리어 컷으로 중앙에는 에어컨 제품과 제품에서 바람이 나오는 모습을 일러스트 요소를 더해 형상화 했으며, 중앙 하단에는 회색 소파와 협탁이 배치되어 있고 이미지 좌측에는 하이패스 방식을 소개하는 이미지가 배치되어 있음", 
         "blind":"하이패스 방식으로 넓은 공간도 빠르게 회오리 냉방"},
         {"imgPc":"wac_model_classic04_pc", "imgMo":"wac_model_classic04_mo", "alt":"실내 인테리어 컷으로 좌측에는 청색 벽지와 흰색 1인용 소파, 작은 협탁이, 우측에는 흰색 벽지에 무풍클래식 제품이 배치되어 있고 중앙에는 스피드 냉방 대비 최대 85% 소비전력을 절약한다는 안내 문구가 배치 ", 
         "blind":"99.9% UV LED 팬 살균으로 더 편리해진 이지케어 5단계"}
      ],
      "q9000": [
         {"imgPc":"wac_model_q900001_pc", "imgMo":"wac_model_q900001_mo", "alt":"Q9000 제품", 
         "blind":"Q9000 AF19B6474···  |  AF17B6474··· 하이패스 회오리 냉방 바람문 컨트롤 절전 이지케어 4단계"},
         {"imgPc":"wac_model_q900002_pc", "imgMo":"wac_model_q900002_mo", "alt":"실내 인테리어 컷이며 좌측에는 Q9000 제품, 우측에는 회색의 소파가 놓여 있으며, 중앙 하단에는 병이 올려져있는 협탁이 배치되어 있고 Q9000 제품 좌측으로는 BESPOKE 디자인의 다양한 색상이 예시로 배치되어 있음", 
         "blind":"우리 집에 맞게 디자인하는 BESPOKE 디자인"},
         {"imgPc":"wac_model_q900003_pc", "imgMo":"wac_model_q900003_mo", "alt":"실내 인테리어 컷으로 중앙에는 에어컨 제품과 제품에서 바람이 나오는 모습을 일러스트 요소를 더해 형상화 했으며, 중앙 하단에는 회색 소파와 협탁이 배치되어 있고 이미지 좌측에는 하이패스 방식을 소개하는 이미지가 배치되어 있음", 
         "blind":"하이패스 방식으로 넓은 공간도 빠르게 회오리 냉방"},
         {"imgPc":"wac_model_q900004_pc", "imgMo":"wac_model_q900004_mo", "alt":"중앙에 2대의 Q9000 제품이 배치되어 있으며 좌측 제품은 소비전력 100% 상태, 우측 제품은 바람문 컨트롤 절전으로 최대 60% 에너지가 절감된 모습을 나타냄", 
         "blind":"최대 60%까지 소비 전력 절약 바람문 컨트롤 절전"},
         {"imgPc":"wac_model_q900005_pc", "imgMo":"wac_model_q900005_mo", "alt":"실내 인테리어 컷이며 우측에는 흰색 커튼과 Q9000 제품이 배치되어 있고, 좌측 상단에는 자동맞춤, 시간맞춤, 저소음맞춤 기능에 대한 설명, 좌측 하단에는 습도에 따라 내부를 건조하는 자동 건조 기능을 상세히 설명",  
         "blind":"관리가 더 편해진 이지케어 4단계"}
      ]
   },
   "modelSlideSys": {
      "system": [
         {"imgPc":"wac_model_system01_pc", "imgMo":"wac_model_system01_mo", "alt":"시스템에어컨 평면도", 
         "blind":"BESPOKE 무풍 시스템에어컨 AJ·········SSY 직바람 없는 무풍냉방 최대 61% 절전냉방 무풍청정 살균필터"},
         {"imgPc":"wac_model_system02_pc", "imgMo":"wac_model_system02_mo", "alt":"천장에 배치된 시스템에어컨과 해당 제품의 마이크로 홀을 통한 미세한 냉기로 무풍냉방이 완성된다는 설명, 우측 하단에는 창문이 보이는 이미지", 
         "blind":"10,000여개의 마이크로 홀로 직바람 없이 시원한 무풍냉방"},
         {"imgPc":"wac_model_system03_pc", "imgMo":"wac_model_system03_mo", "alt":"어두운 배경에 시스템 에어컨이 배치되어 있으며 좌측은 일반 시스템에어컨, 우측은 삼성 무풍 시스템에어컨이 배치되어 있고, 일반 시스템에어컨 대비 당사 제품의 에너지 절감을 나타내는 아이콘이 하단에 삽입된", 
         "blind":"무풍운전 시 일반운전 대비 최대 61%까지 에너지 절감"},
         {"imgPc":"wac_model_system04_pc", "imgMo":"wac_model_system04_mo", "alt":"통창 구조의 거실 배경, 창밖에는 잔디 밭이 보이며, 우측에는 다인용 소파와 조명, 좌측에는 식탁, 바닥에는 러그가 배치되어 있고 좌측 천장에 배치된 시스템 에어컨에서 냉기가 뿜어져 나오는", 
         "blind":"냉기를 더 멀리 더 빠르게 균일냉방"},
         {"imgPc":"wac_model_system05_pc", "imgMo":"wac_model_system05_mo", "alt":"하얀 실내에 세로형 창문이 2개 배치되어 있으며, 우측 천장의 시스템에어컨에서 냉기가 뿜어져 나오고 좌측 하단에는 당사 제품의 프리필터, PM 1.0필터, 탈취필터를 나타내는 이미지로 삼성 무풍 시스템에어컨의 살균필터 기능을 소개하는", 
         "blind":"살균필터로 사계절 내내 무풍청정 깨끗한 공기"}
      ],
      "infinite": [
         {"imgPc":"wac_model_infinite01_pc", "imgMo":"wac_model_infinite01_mo", "alt":"시스템에어컨 Infinite Line 평면도", 
         "blind":"BESPOKE 무풍 시스템에어컨 Infinite Line AN·········SSY 인피니트 디자인 엣지 라이팅 와이드 무풍냉방"},
         {"imgPc":"wac_model_infinite02_pc", "imgMo":"wac_model_infinite02_mo", "alt":"어두운 배경에서 설치되어 있는 시스템 에어컨에서 엣지 라이팅 기능으로 조명이 비추는 이미지", 
         "blind":"공간의 무드를 만들어내는 엣지 라이팅"},
         {"imgPc":"wac_model_infinite03_pc", "imgMo":"wac_model_infinite03_mo", "alt":"검정 배경에 우측에는 시스템에어컨 제품이 있는", 
         "blind":"고효율 에너지 맞춤절전 와이드 무풍"},
         {"imgPc":"wac_model_infinite04_pc", "imgMo":"wac_model_infinite04_mo", "alt":"좌측 이미지에는 실내 공간에서 시스템 에어컨을 통해 냉방이 되고 있음을 보여주는 인테리어 컷이 있고, 바람과 함께 나뭇잎 흩날리는 모습을 통해 절약 냉방을 나타냄", 
         "blind":"상황에 맞춰 에너지를 절감하는 AI 절약모드"},
         {"imgPc":"wac_model_infinite05_pc", "imgMo":"wac_model_infinite05_mo", "alt":"무풍 시스템에어컨 Infinte Line의 필터와 내부 제품을 배치했으며, 우측에는 리모콘이 함께 배치되어 있어 리모콘의 특정 버튼 클릭시 실행되는 청정케어 8단계에 대한 상세한 설명을 나타내는", 
         "blind":"알아서 a맞춰주는 BESPOKE Infinite AI 맞춤쾌적"}
      ]
   }
}
},{}],2:[function(require,module,exports){
"use strict";

var _modelSlide = _interopRequireDefault(require("../data/modelSlide.json"));
var _bs_common = require("./modules/bs_common");
var _page_tab = require("./modules/page_tab");
var _anchor = require("./modules/anchor");
var _sticky = require("./modules/sticky");
var _coupon = require("./modules/coupon");
var _modal = require("./modules/modal");
var _tab = require("./modules/tab");
var _component_tab = require("./modules/component_tab");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
_page_tab.page_tab.init();
$(document).ready(function () {
  function tabClickCom() {
    setTimeout(() => {
      const tabCom = document.querySelector('[data-page-tab="com"]');
      if (!tabCom) return;
      tabCom.click();
    }, 0);
  }
  function tabClickSys() {
    setTimeout(() => {
      const tabSys = document.querySelector('[data-page-tab="sys"]');
      if (!tabSys) return;
      tabSys.click();
    }, 0);
  }

  /** 일반제품 주요기능 팝업 닫기 */
  function modalCloseCom() {
    setTimeout(() => {
      const closeBtnCom = document.querySelector('.pt_model_pop--com .btn_close');
      closeBtnCom.click();
    }, 0);
  }

  /** 시스템에어컨 상담신청 CTA 클릭 앵커드 */
  function ePromoterApply() {
    setTimeout(() => {
      const tabSys = document.querySelector('[data-page-tab="sys"]');
      const consultBtn = document.querySelector('.sec_consult .pt_consult__btn');
      if (!tabSys) return;
      tabSys.click();
      consultBtn.click();
    }, 0);
  }
  _anchor.anchor.click([{
    el: '[data-role-anchor="sec_consult"]',
    target: '.sec_consult',
    scroll: [-70, -80]
  }, {
    el: '[data-role-anchor="sec_benefit_com"]',
    target: '.sec_benefit--com',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_benefit_sys"]',
    target: '.sec_benefit--sys',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_recommend_com"]',
    target: '.sec_recommend--com',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_recommend_sys"]',
    target: '.sec_recommend--sys',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_subscribe_com"]',
    target: '.sec_subscribe--com',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_subscribe_sys"]',
    target: '.sec_subscribe--sys',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_component_rooms"]',
    target: '.sec_component--rooms',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_faq"]',
    target: '.sec_faq',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_component_wall"]',
    target: '#sec_component_wall',
    scroll: [-62, -48]
  }, {
    el: '[data-role-anchor="sec_line_model01"]',
    target: '.sec_model',
    scroll: [-62, -48]
  }, {
    el: '[data-role-anchor="sec_line_model02"]',
    target: '.sec_model',
    scroll: [-62, -48]
  }, {
    el: '[data-role-anchor="pt_notice_rooms"]',
    target: '.pt_notice_rooms',
    scroll: [-62, -80]
  }, {
    el: '[data-role-anchor="sec_notice"]',
    target: '.sec_notice',
    scroll: [0, 0]
  },
  //시스템 전문상담배너 유의사항 앵커드
  {
    el: '[data-role-anchor="pt_consult_noti"]',
    target: '.pt_consult_noti',
    scroll: [-75, -110]
  },
  // 모델별 주요기능 제품보러가기 앵커드드
  {
    el: '[data-role-anchor="recomm_gallery"]',
    target: '#sec_recommend_com',
    scroll: [-62, -80],
    tabClick: tabClickCom,
    modalClose: modalCloseCom,
    click: '[data-ty="tab1"]'
  }, {
    el: '[data-role-anchor="recomm_classic"]',
    target: '#sec_recommend_com',
    scroll: [-62, -80],
    tabClick: tabClickCom,
    modalClose: modalCloseCom,
    click: '[data-ty="tab2"]'
  }, {
    el: '[data-role-anchor="recomm_q9000"]',
    target: '#sec_recommend_com',
    scroll: [-62, -80],
    tabClick: tabClickCom,
    modalClose: modalCloseCom,
    click: '[data-ty="tab3"]'
  }]);
  _anchor.anchor.load([
  //일반에어컨
  // 일반> sec_kv
  {
    url: 'kv',
    target: '[data-page-content="com"].sec_kv',
    scroll: [-62, -80],
    tabClick: tabClickCom
  },
  // 일반> sec_nav
  {
    url: 'tab',
    target: '#sec_nav_com',
    scroll: [-62, -80],
    tabClick: tabClickCom
  },
  // 일반> sec_benefit
  {
    url: 'benefit',
    target: '.sec_benefit.sec_benefit--com',
    scroll: [-62, -80],
    tabClick: tabClickCom
  },
  // 일반> 추천제품
  {
    url: 'recommend',
    target: '#sec_recommend_com',
    scroll: [-62, -80],
    tabClick: tabClickCom
  },
  // 일반> 추천제품 - 갤러리탭탭
  {
    url: 'new-gallery',
    target: '#sec_recommend_com',
    scroll: [-62, -80],
    tabClick: tabClickCom,
    click: '[data-ty="tab1"]'
  },
  // 일반> 추천제품 - 갤러리탭탭
  {
    url: 'classic',
    target: '#sec_recommend_com',
    scroll: [-62, -80],
    tabClick: tabClickCom,
    click: '[data-ty="tab2"]'
  },
  // 일반> 추천제품 - 갤러리탭탭
  {
    url: 'q9000',
    target: '#sec_recommend_com',
    scroll: [-62, -80],
    tabClick: tabClickCom,
    click: '[data-ty="tab3"]'
  },
  // 일반> 구독
  {
    url: 'subscribe',
    target: '#sec_subscribe--com',
    scroll: [-62, -80],
    tabClick: tabClickCom
  },
  // 일반> 벽걸이형 에어컨
  {
    url: 'wall-mount',
    target: '#sec_component_wall',
    scroll: [-62, -80],
    tabClick: tabClickCom
  },
  // 시스템에어컨
  // 시스템> sec_kv
  {
    url: 'system-kv',
    target: '[data-page-content="sys"].sec_kv',
    scroll: [-62, -80],
    tabClick: tabClickSys
  },
  // 시스템> sec_nav
  {
    url: 'system-tab',
    target: '#sec_nav_sys',
    scroll: [-62, -80],
    tabClick: tabClickSys
  },
  // 시스템> sec_benefit
  {
    url: 'system-benefit',
    target: '.sec_benefit.sec_benefit--sys',
    scroll: [-62, -80],
    tabClick: tabClickSys
  },
  // 시스템> 추천모델
  {
    url: 'system-recommend',
    target: '#sec_recommend_sys',
    scroll: [-62, -80],
    tabClick: tabClickSys
  },
  // 시스템> 추천모델 3실탭
  {
    url: 'indoor-3',
    target: '#sec_recommend_sys',
    scroll: [-62, -80],
    tabClick: tabClickSys,
    click: '#sec_recommend_sys .pt_recomm__btn--sys1 a'
  },
  // 시스템> 추천모델 4실탭
  {
    url: 'indoor-4',
    target: '#sec_recommend_sys',
    scroll: [-62, -80],
    tabClick: tabClickSys,
    click: '#sec_recommend_sys .pt_recomm__btn--sys2 a'
  },
  // 시스템> 추천모델 5실탭
  {
    url: 'indoor-5',
    target: '#sec_recommend_sys',
    scroll: [-62, -80],
    tabClick: tabClickSys,
    click: '#sec_recommend_sys .pt_recomm__btn--sys3 a'
  },
  // 시스템> 방방구매
  {
    url: 'system-pre-purchase-benefit',
    target: '.sec_component--rooms',
    scroll: [-62, -80],
    tabClick: tabClickSys
  },
  // 시스템> 컴포넌트 탭 cta
  {
    url: 'system-pre-purchase-product',
    target: '#pt_component_tab_sys',
    scroll: [-62, -80],
    tabClick: tabClickSys
  },
  // 시스템> 구독
  {
    url: 'system-subscribe',
    target: '.sec_subscribe--sys',
    scroll: [-62, -80],
    tabClick: tabClickSys
  },
  // 시스템-전문상담배너 앵커드
  {
    url: 'e-promoter',
    target: '.sec_consult',
    scroll: [-62, -80],
    tabClick: tabClickSys
  },
  // 시스템에어컨 상담신청 CTA 앵커드 url
  {
    url: 'e-promoterPopup',
    target: '.sec_consult',
    scroll: [-62, -80],
    tabClick: ePromoterApply
  },
  // 시스템> sec_faq
  {
    url: 'faq',
    target: '.sec_faq',
    scroll: [-62, -80],
    tabClick: tabClickSys
  }]);
  _tab.tab.click([{
    el: '[data-role-tab="model_tab_com"]',
    target: '#tab_model_com'
  }]);
  const air_conditioner = {
    // bg에 lozad 적용
    imgLozad() {
      const observerbg = lozad(".pt_bg-image", {
        loaded: function (el) {
          el.classList.add("pt_add-bg");
        }
      });
      observerbg.observe();
    },
    navSwiper() {
      //nav swiper시 주석해제
      let navSwiper = new Swiper('.swiper-container.pt_mo_sys_swiper', {
        slidesPerView: 'auto',
        allowTouchMove: true,
        preloadImages: false,
        observer: true,
        observeParents: true,
        lazy: true,
        breakpoints: {
          769: {
            slidesPerView: 'auto',
            allowTouchMove: false,
            preloadImages: false,
            lazy: true
          }
        },
        on: {
          breakpoint: function () {
            var that = this;
            setTimeout(function () {
              that.slideTo(0, 0);
            }, 150);
          }
        }
      });
    },
    /** 혜택 슬라이드 */
    bnfSwiper() {
      let benefitSwiper = new Swiper(".sec_benefit .pt_bnf__container", {
        slidesPerView: "auto",
        allowTouchMove: true,
        observer: true,
        observeParents: true,
        observeSlideChildren: true,
        lazy: true,
        a11y: {
          prevSlideMessage: '이전 슬라이드',
          nextSlideMessage: '다음 슬라이드',
          slideLabelMessage: '총 {{slidesLength}}장의 슬라이드 중 {{index}}번 슬라이드 입니다.'
        },
        pagination: {
          el: ".pt_bnf__container .pt_bnf__pagination",
          clickable: true
        },
        breakpoints: {
          769: {
            allowTouchMove: false
          }
        },
        on: {
          breakpoint: function () {
            let _self = this;
            setTimeout(function () {
              _self.slideTo(0, 0);
            }, 150);
          }
        }
      });
    },
    /** 체크리스트+faq MO 슬라이드 */
    chkSwiper() {
      var ww = $(window).width();
      var mySwiper = undefined;
      function initSwiper() {
        if (ww < 768 && mySwiper == undefined) {
          mySwiper = new Swiper(".swiper-container.pt_chk__swiper", {
            slidesPerView: 'auto',
            observer: true,
            observeParents: true,
            lazy: true,
            preloadImages: false,
            pagination: {
              el: '.swiper-pagination.pt_chk__pagi',
              clickable: true
            },
            breakpoints: {
              769: {
                allowTouchMove: false
              }
            },
            a11y: {
              // 웹접근성 
              enabled: true,
              prevSlideMessage: '이전 슬라이드',
              nextSlideMessage: '다음 슬라이드',
              slideLabelMessage: '총 {{slidesLength}}장의 슬라이드 중 {{index}}번 슬라이드 입니다.'
            },
            on: {
              breakpoint: function () {
                const that = this;
                setTimeout(function () {
                  that.slideTo(0, 0);
                }, 150);
              },
              init: function () {}
            }
          });
        } else if (ww >= 768 && mySwiper != undefined) {
          mySwiper.destroy();
          mySwiper = undefined;
        }
      }
      initSwiper();
      $(window).on('resize', function () {
        ww = $(window).width();
        initSwiper();
      });
    },
    componentBg() {
      let compoLength = 0;
      const compoList = $('.wrap-component');
      compoList.each(function (idx) {
        $(compoList[idx]).attr("id", `compo${idx}`);
      });

      //컴포넌트 배경 넣기
      compoList.each(function (idx) {
        if (compoLength <= idx) {
          if (idx >= 0 && idx <= 4 || idx >= 7 && idx <= 9) {
            $(compoList[idx]).css("background", "#E7F0FA");
          }
          if (idx >= 10 && idx <= 13) {
            $(compoList[idx]).css("background", "#f2f9ff");
          }
        }
      });
    },
    init() {
      this.imgLozad();
      this.navSwiper();
      this.bnfSwiper();
      this.chkSwiper();
      this.componentBg();
    }
  };

  //구독클럽 스와이퍼 com
  const subsSwiperCom = new Swiper('.swiper-container.pt_subscribe_slide--com', {
    slidesPerView: 'auto',
    // slidesPerGroup: 2,
    allowTouchMove: true,
    preloadImages: false,
    lazy: true,
    observer: true,
    observeParents: true,
    pagination: {
      el: ".pt_subscribe_slide__pagination--com",
      clickable: true
    },
    breakpoints: {
      769: {
        allowTouchMove: false
      }
    },
    on: {
      init: function () {
        const $el = $(this.$el);
        this.params.navigation.prevEl = $el.siblings('.pt_arrow--prev');
        this.params.navigation.nextEl = $el.siblings('.pt_arrow--next');
      },
      breakpoint: function () {
        let _self = this;
        setTimeout(function () {
          _self.slideTo(0, 0);
        }, 150);
      }
    }
  });

  //구독클럽 스와이퍼 sys
  const subsSwiperSys = new Swiper('.swiper-container.pt_subscribe_slide--sys', {
    slidesPerView: 'auto',
    // slidesPerGroup: 2,
    allowTouchMove: true,
    preloadImages: false,
    lazy: true,
    observer: true,
    observeParents: true,
    pagination: {
      el: ".pt_subscribe_slide__pagination--sys",
      clickable: true
    },
    breakpoints: {
      769: {
        allowTouchMove: false
      }
    },
    on: {
      init: function () {
        const $el = $(this.$el);
        this.params.navigation.prevEl = $el.siblings('.pt_arrow--prev');
        this.params.navigation.nextEl = $el.siblings('.pt_arrow--next');
      },
      breakpoint: function () {
        let _self = this;
        setTimeout(function () {
          _self.slideTo(0, 0);
        }, 150);
      }
    }
  });

  // 전문 상담 모듈 API
  function specialCounselAplPop() {
    var options = {
      url: "/sec/specialCounsel/applyPopup/",
      data: {
        spcsTmplNo: 2
      },
      type: 'POST',
      async: false,
      dataType: "html",
      done: function (data) {
        $('#popupCounsel').remove();
        $('#addHtmlPopupCounsel').after(data);
        $('input[name="addHtmlPopupCounsel"]').eq(0).remove();
        var minDate = new Date();
        var maxDate = new Date().addDay(30);
        $('#inpCusDate').datepicker({
          "minDate": minDate,
          "maxDate": maxDate,
          "changeMonth": true,
          "changeYear": true,
          "onClose": function (input, inst) {},
          "ON-SELECT": function (input, inst) {
            setCounselDt();
          }
        });
        const holidayWeek = $('#holidayWeekList').val(); //[1, 2, 3, 4, 5]
        const holidayList = $('#holidayList').val(); //[20250101, 20250102]
        var activeDays = [];
        var today = new Date();
        var datepickerOption = {
          disabledType: '30',
          beforeShow: function () {
            setTimeout(function () {}, 0);
          }
        };
        for (var i = 0; i < 30; i += 1) {
          if (holidayWeek != 'undefiend' && holidayWeek.indexOf(today.getDay()) != -1) {
            if (holidayList != 'undefiend' && holidayList.indexOf(dateToStringFormat(today, "yyyyMMdd")) == -1) {
              activeDays.push(dateToStringFormat(today, "yyyyMMdd"));
            }
          }
          today.setDate(today.getDate() + 1);
        }
        datepickerOption = $.extend({}, datepickerOption, {
          activeDays: activeDays
        });
        setDatePicker(datepickerOption);
        var content;
        $("#inpApplyText").on('propertychange keyup paste input', function (e) {
          content = $("#inpApplyText").val();
          $(".txt-count").html("<span><em class=\"strong\">" + content.length + "</em> / 1000자</span>");
          if (content.length > 1000) {
            $("#inpApplyText").val(content.substr(0, 1000));
            content = $("#inpApplyText").val();
            $(".txt-count").attr("tabindex", "0").html("<span><em class=\"strong\">" + content.length + "</em> / 1000자</span>");
          }
        });
        if (!$("#popupCounsel").hasClass('active')) {
          openLayer('popupCounsel');
        }
      }
    };
    ajax.call(options);
  }
  $(".sec_consult .pt_consult__btn").click(function () {
    specialCounselAplPop();
  });
  _modal.modal.init();
  _sticky.sticky.init();
  _coupon.promoCoupon.init();
  _component_tab.component_tab.init();
  air_conditioner.init();
  viewportChange(); // fold 해상도 대응
});

},{"../data/modelSlide.json":1,"./modules/anchor":3,"./modules/bs_common":4,"./modules/component_tab":5,"./modules/coupon":6,"./modules/modal":7,"./modules/page_tab":8,"./modules/sticky":9,"./modules/tab":10}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.anchor = void 0;
var _bs_common = require("./bs_common");
const $window = $(window);
const anchor = exports.anchor = {
  /**
   * 버튼 클릭 시 페이지 내 data-target으로 앵커 이동
   * @param {object} params {'target': str, 'speed': num, 'scroll': [pc,mo]}
   * @desc target : 해당 타켓
   * @desc speed : 이동 속도
   * @desc scroll : 이동 후 추가 여백
   */
  click(params) {
    _bs_common.util.setEventState('clickAnc', params);
    const data = {
      opt: {
        speed: 500,
        scroll: [0, 0]
      },
      params: _bs_common.util.getEventState('clickAnc')
    };
    _bs_common.PT_STATE.$PROJECT.off('click.clickAnc').on('click.clickAnc', '[data-role-anchor]', function (e) {
      e.preventDefault();
      const $this = $(this);
      const {
        target,
        speed = data.opt.speed,
        scroll = data.opt.scroll,
        click = data.opt.click,
        modalClose = data.opt.modalClose
      } = _bs_common.util.findItem(data.params, 'el', `[data-role-anchor="${$this.attr('data-role-anchor')}"]`);
      $(target).attr('tabindex', 0);
      $('html, body').stop().animate({
        scrollTop: $(target).offset().top + _bs_common.util.pxToVw(scroll[0], scroll[1])
      }, speed, function () {
        $(target).focusout(function () {
          $(target).removeAttr('tabindex');
        });
      });
      if (click) {
        $(click).trigger('click');
      }
      if (modalClose && typeof modalClose == 'function') {
        modalClose();
      }
      $(target).focus();
    });
  },
  /**
   * 화면 로드 후 paramsData.target으로 앵커드 이동
   * @param {object} params target:해당 타겟, speed: 속도, scroll: 추가 여백
   * @desc key : 기본 anc key값 변경 필요시 사용
   * @desc target : 해당 타켓
   * @desc speed : 이동 속도
   * @desc scroll : 이동 후 추가 여백
   */
  load(params) {
    _bs_common.util.setEventState('loadAnc', params);
    const data = {
      opt: {
        key: 'anc',
        speed: 500,
        scroll: [0, 0]
      },
      params: _bs_common.util.getEventState('loadAnc')
    };
    const param = _bs_common.util.getParameterByName(data.opt.key);
    if (!param) return;
    const {
      target,
      isCategory,
      speed = data.opt.speed,
      scroll = data.opt.scroll,
      click = data.opt.click,
      beforeScrollStart = data.opt.beforeScrollStart,
      tabClick = data.opt.tabClick
    } = _bs_common.util.findItem(data.params, 'url', param);
    if (beforeScrollStart && typeof beforeScrollStart == 'function') {
      beforeScrollStart();
    }
    if (tabClick && typeof tabClick == 'function') {
      tabClick();
    }
    $window.off('load.loadAnc').on('load.loadAnc', function () {
      try {
        // $('html, body').stop().animate({ scrollTop: $(target).offset().top + util.pxToVw(scroll[0], scroll[1]) }, speed);
        $(target).attr('tabindex', 0);
        // $('html, body').stop().animate({ scrollTop: $(target).offset().top + util.pxToVw(scroll[0], scroll[1]) }, speed, function(){
        //     /**
        //      * 23.05.15
        //      * 카테고리 탭 트리거 추가
        //      * Mckenzi
        //      */
        //     if (isCategory) {
        //         $(`[data-category=${param}]`).trigger('click');
        //     }
        //     $(target).focusout(function(){
        //         $(target).removeAttr('tabindex');
        //     });
        // });
        setTimeout(function () {
          $('html, body').animate({
            scrollTop: $(target).offset().top + _bs_common.util.pxToVw(scroll[0], scroll[1])
          }, speed, function () {});
          if (isCategory) {
            $(`[data-category=${param}]`).trigger('click');
          }
          $(target).focusout(function () {
            $(target).removeAttr('tabindex');
          });
        }, 300);
        if (click) {
          $(click).trigger('click');
        }
        $(target).focus();

        // 일반에어컨
        // 일반> 한정수량 비스포크 AI 쿠풍 갤러리
        if (param === 'new-gallery-limited') {
          // console.log('param', param);
          document.querySelector('.sec_buying--com input[value="optB_7"]').click();
          document.querySelector('.sec_buying--com input[value="optC_1"]').click();
        }
        // 비스포크 AI 쿠풍 갤러리
        if (param === 'new-gallery') {
          document.querySelector('.sec_buying--com input[value="optB_1"]').click();
        }
        // 무풍에어컨 클래식
        if (param === 'classic') {
          document.querySelector('.sec_buying--com input[value="optB_3"]').click();
        }
        // Q9000
        if (param === 'q9000') {
          document.querySelector('.sec_buying--com input[value="optB_4"]').click();
        }

        // 시스템에어컨
        // 시스템> 비스포크 무풍 시스템에어컨
        if (param === 'normal') {
          document.querySelector('.sec_buying--sys input[value="optBB_5"]').click();
        }
        // 시스템> 비스포크 무풍 시스템에어컨 인피니티라인
        if (param === 'infinite') {
          document.querySelector('.sec_buying--sys input[value="optBB_6"]').click();
        }
      } catch (err) {
        console.log('해당하는 앵커 영역이 없습니다.');
      }
    });
  }
};

},{"./bs_common":4}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.util = exports.tab = exports.modal = exports.countDownEvt = exports.copy = exports.button = exports.anchor = exports.accordian = exports.PT_STATE = void 0;
const $window = $(window);
const PT_STATE = exports.PT_STATE = {
  $PROJECT: $('.sec_project_wrap'),
  eventState: {}
};

//  * @todo 해야 하는일
//  * @example <caption>Example usage of method1.</caption>
//  * returns 2
//  * globalNS.method1(5, 10);
//  * @deprecated [더이상 사용되지 않는 기능 버전 0.1]
//  * @version 0.1

const util = exports.util = {
  /**
   * 해당 화면이 768 미만이면 true 리턴
   * @returns boolean
   */
  isMobile() {
    return $window.outerWidth() <= 768;
  },
  /**
   * ',' 추가 함수 ex) 9999 => 9,999
   * @param {number} numberStr
   */
  addComma(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
  },
  /**
   * ',' 제거 함수 ex) 9,999 => 9999
   * @param {string} numberStr
   */
  removeComma(num) {
    return +num.replace(/,/g, '');
  },
  /**
   * pc 1440, mo 720 기준으로 px값을 vw값으로 변환
   * @param {number} pc pc 픽셀 값
   * @param {number} mo mo 픽셀 값, 인자 값이 없을경우 pc 픽셀 값으로 계산
   */
  pxToVw(pc, mo) {
    const winWidth = $window.outerWidth();
    const divide = util.isMobile() ? 720 : 1440;
    const pixel = util.isMobile() ? mo === undefined ? pc : mo : pc;
    return pixel >= 0 ? Math.min(pixel, pixel / divide * winWidth) : Math.max(pixel, pixel / divide * winWidth);
  },
  /**
   * makeAlert이 정의가 되어 있으면 makeAlert 함수 호출
   * @param {string} message
   */
  alert: function (message) {
    typeof makeAlert == 'function' ? makeAlert(message) : alert(message);
  },
  /**
   * 현재 주소의 파리미터 값 '=' 뒤에 텍스트 리턴 함수 ex) ?name=value
   * @param {string} name
   * @returns value
   */
  getParameterByName: function (name) {
    const regex = new RegExp(`[\\?&]${name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]')}=([^&#]*)`);
    const results = regex.exec(location.search);
    return results == null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
  },
  /**
   * PT_STATE eventState 상태 값 저장
   * @param {string} key eventState key값
   * @param {object} params eventState value 값
   */
  setEventState: function (key, params) {
    if (!PT_STATE.eventState[key]) {
      PT_STATE.eventState[key] = params;
    } else {
      PT_STATE.eventState[key] = Object.assign(PT_STATE.eventState[key], params);
    }
  },
  /**
   * PT_STATE eventState 상태 값 불러오기
   * @param {string} key eventState key값
   * @returns eventState value 값
   */
  getEventState: function (key) {
    return PT_STATE.eventState[key];
  },
  /**
   * 해당 이벤트의 값을 가진 객체를 return 하는 함수
   * @param {*} params 해당 배열
   * @param {*} key 찾는 key 값
   * @param {*} val 찾는 val 값
   * @returns 해당 객체
   */
  findItem: function (params, key, val) {
    const {
      [key]: evtItem,
      ...item
    } = params.filter(item => item[key] === val)[0];
    return item;
  }
};
const anchor = exports.anchor = {
  /**
   * 버튼 클릭 시 페이지 내 data-target으로 앵커 이동
   * @param {object} params {'target': str, 'speed': num, 'scroll': [pc,mo]}
   * @desc target : 해당 타켓
   * @desc speed : 이동 속도
   * @desc scroll : 이동 후 추가 여백
   */
  click(params) {
    util.setEventState('clickAnc', params);
    const data = {
      opt: {
        speed: 500,
        scroll: [0, 0]
      },
      params: util.getEventState('clickAnc')
    };
    PT_STATE.$PROJECT.off('click.clickAnc').on('click.clickAnc', '[data-role-anchor]', function (e) {
      e.preventDefault();
      const $this = $(this);
      const {
        target,
        speed = data.opt.speed,
        scroll = data.opt.scroll
      } = util.findItem(data.params, 'el', `[data-role-anchor="${$this.attr('data-role-anchor')}"]`);
      let ancClick = $this.attr('data-role-anchor');
      if (ancClick == 'notice_jet') {
        if (!$('[data-role-accordian="benefit_acco_jet"]').hasClass('active')) {
          $('[data-role-accordian="benefit_acco_jet"]').trigger('click');
        }
      }
      if (ancClick == 'notice_jet_point') {
        if (!$('[data-role-accordian="benefit_acco_jet"]').hasClass('active')) {
          $('[data-role-accordian="benefit_acco_jet"]').trigger('click');
        }
      }
      if (ancClick == 'notice_air01') {
        if (!$('[data-role-accordian="benefit_acco_air"]').hasClass('active')) {
          $('[data-role-accordian="benefit_acco_air"]').trigger('click');
        }
      }
      if (ancClick == 'notice_air02') {
        if (!$('[data-role-accordian="benefit_acco_air"]').hasClass('active')) {
          $('[data-role-accordian="benefit_acco_air"]').trigger('click');
        }
      }
      $('html, body').stop().animate({
        scrollTop: $(target).offset().top + util.pxToVw(scroll[0], scroll[1])
      }, speed, function () {
        if (ancClick == 'notice_jet' || ancClick == 'notice_air01' || ancClick == 'notice_air02') {
          $(target).attr('tabindex', 0).focus();
        } else {
          $(target).focus();
        }
      });
      if (ancClick == 'pt_nav05') {
        $('.pt_nav05 a').trigger('click');
      }
    });
    $('[data-focus="notice_jet"]').focusout(function () {
      $('[data-focus="notice_jet"]').removeAttr('tabindex');
    });
    $('[data-focus="notice_air01"]').focusout(function () {
      $('[data-focus="notice_air01"]').removeAttr('tabindex');
    });
    $('[data-focus="notice_air02"]').focusout(function () {
      $('[data-focus="notice_air02"]').removeAttr('tabindex');
    });
  },
  /**
   * 화면 로드 후 paramsData.target으로 앵커드 이동
   * @param {object} params target:해당 타겟, speed: 속도, scroll: 추가 여백
   * @desc key : 기본 anc key값 변경 필요시 사용
   * @desc target : 해당 타켓
   * @desc speed : 이동 속도
   * @desc scroll : 이동 후 추가 여백
   */
  load(params) {
    util.setEventState('loadAnc', params);
    const data = {
      opt: {
        key: 'anc',
        speed: 500,
        scroll: [0, 0]
      },
      params: util.getEventState('loadAnc')
    };
    const param = util.getParameterByName(data.opt.key);

    // PT_STATE.ancLoadList = params;
    // console.log('load', PT_STATE);

    if (!param) return;
    const {
      target,
      speed = data.opt.speed,
      scroll = data.opt.scroll,
      handleLoadAncTarget = data.opt.handleLoadAncTarget,
      beforeScrollStart = data.opt.beforeScrollStart,
      offScroll = data.opt.beforeScrollStart
    } = util.findItem(data.params, 'url', param);
    if (beforeScrollStart && typeof beforeScrollStart == 'function') {
      beforeScrollStart();
    }
    // 240213 로드 시 앵커드 이동 및 클릭
    if (handleLoadAncTarget && typeof handleLoadAncTarget == 'function') {
      handleLoadAncTarget();
    }
    $window.off('load.loadAnc').on('load.loadAnc', function () {
      try {
        if (!offScroll) $('html, body').stop().animate({
          scrollTop: $(target).offset().top + util.pxToVw(scroll[0], scroll[1])
        }, speed);
      } catch (err) {
        console.log('해당하는 앵커 영역이 없습니다.');
      }
    });
  },
  /**
   * 바잉툴 출력 후 paramsData.target으로 앵커드 이동
   * @param {object} params target:해당 타겟, speed: 속도, scroll: 추가 여백
   * @desc key : 기본 anc key값 변경 필요시 사용
   * @desc target : 해당 타켓
   * @desc speed : 이동 속도
   * @desc scroll : 이동 후 추가 여백
   */
  reset() {
    console.log('reset', PT_STATE.ancLoadList);

    // util.setEventState('loadAnc', params);

    // const data = {
    //     opt: {
    //         key: 'anc',
    //         speed: 500,
    //         scroll: [0, 0],
    //     },
    //     params: util.getEventState('loadAnc')
    // };

    // const param = util.getParameterByName(data.opt.key);

    // if (!param) return;

    // const { target, speed = data.opt.speed, scroll = data.opt.scroll, beforeScrollStart = data.opt.beforeScrollStart } = util.findItem(data.params, 'url', param);

    // if (beforeScrollStart && typeof beforeScrollStart == 'function') {
    //     beforeScrollStart();
    // }

    // $window.off('load.loadAnc').on('load.loadAnc', function () {
    //     try {
    //         $('html, body').stop().animate({ scrollTop: $(target).offset().top + util.pxToVw(scroll[0], scroll[1]) }, speed);
    //     } catch (err) {
    //         console.log('해당하는 앵커 영역이 없습니다.');
    //     }
    // });
  }
};
const accordian = exports.accordian = {
  /**
   * 토글 버튼 클릭 시 페이지 내 data-target show/hide
   * @param {object} params {'target': str, 'speed': num, 'group': str, 'openFocus': str, 'open': boolean}
   * @desc target : 해당 타켓
   * @desc speed : 토글 속도
   * @desc group : 그룹 지정시 동일한 그룹명 지정
   * @desc openFocus : 토글 오픈 후 컨텐츠 타켓
   * @desc open : 페이지 로드 후 컨텐츠 오픈 유무
   */
  toggle(params) {
    util.setEventState('clickToggle', params);
    const data = {
      opt: {
        speed: 0,
        openFocus: false,
        open: false
      },
      params: util.getEventState('clickToggle')
    };

    //토글 열기
    PT_STATE.$PROJECT.off('click.toggleAcc').on('click.toggleAcc', '[data-role-accordian]', function (e) {
      e.preventDefault();
      const $this = $(this);
      const {
        target,
        speed = data.opt.speed,
        openFocus = data.opt.openFocus,
        group
      } = util.findItem(data.params, 'el', `[data-role-accordian="${$this.attr('data-role-accordian')}"]`);
      if (group && !$this.hasClass('active')) {
        const arr = Object.values(data.params).filter(item => item.group === group);
        arr.forEach(item => {
          $(item.el).removeClass('active');
          $(item.target).stop().slideUp(speed);
        });
      }

      // $this.toggleClass('active');
      // $this.hasClass('active') ? $(target).stop().slideDown(speed) : $(target).stop().slideUp(speed);
      // $(target).attr('tabindex', 0);

      $this.toggleClass('active');
      $this.hasClass('active') ? $(target).stop().slideDown(speed) : $(target).stop().slideUp(speed);

      // 토글클릭시 앵커이동 안되게
      if (!util.isMobile() && target == "#pt_step_jet1" || !util.isMobile() && target == "#pt_step_jet2" || !util.isMobile() && target == "#pt_step_jet3" || !util.isMobile() && target == "#pt_step_air1" || !util.isMobile() && target == "#pt_step_air2" || !util.isMobile() && target == "#pt_step_air3") {} else {
        $('html, body').stop().animate({
          scrollTop: $(target).is(':visible') && openFocus ? $(target).offset().top : $(target).is(':visible') && $this.hasClass('active') ? $this.offset().top : $(window).scrollTop()
        }, 500);
      }

      // $('html, body').stop().animate({ scrollTop: $(target).is(':visible') && openFocus ? $(target).offset().top : $this.offset().top }, 500, function(){
      //     $(target).focusout(function(){
      //         $(target).removeAttr('tabindex');
      //     });
      // });
      //$(target).attr('tabindex', 0);

      /* 230414 해당영역 포커스 제거
      $(target).focus(); */
    });

    //토글 닫기
    PT_STATE.$PROJECT.off('click.closeAcc').on('click.closeAcc', '[data-role-accordianClose]', function (e) {
      e.preventDefault();
      const $this = $(this);
      const target = $this.attr('data-role-accordianClose');

      //$(`[data-role-accordian="${target}"]`).click().focus();
      $(`[data-role-accordian="${target}"]`).click();
      $('html, body').stop().animate({
        scrollTop: $(`[data-role-accordian="${target}"]`).offset().top
      }, 500, function () {
        $(target).focusout(function () {
          $(target).removeAttr('tabindex');
        });
      });
    });

    //토글 컨탠츠 hide 처리
    PT_STATE.$PROJECT.find('[data-role-accordian]').each(function () {
      const $this = $(this);
      const {
        target,
        open = data.opt.open
      } = util.findItem(data.params, 'el', `[data-role-accordian="${$this.attr('data-role-accordian')}"]`);
      open ? $this.addClass('active') : $(target).hide();
    });
  }
};
const tab = exports.tab = {
  /**
   * 탭 버튼 클릭시 해당 타겟 show 하는 함수
   * @param {object} params {'target': str, 'default': num}
   * @desc target : 해당 타켓
   * @desc default : 화면 로드 시 초기 액티브 index
   */

  click(params) {
    util.setEventState('clickTab', params);
    const data = {
      params: util.getEventState('clickTab')
    };

    //탭 클릭시 타겟 show
    PT_STATE.$PROJECT.off('click.clickTab').on('click.clickTab', '[data-role-tab] > a', function (e) {
      e.preventDefault();
      const $this = $(this);
      if ($this.hasClass('active')) return;
      const $parent = $this.closest('[data-role-tab]');
      const {
        target
      } = util.findItem(data.params, 'el', `[data-role-tab="${$parent.attr('data-role-tab')}"]`);
      const _index = $this.index();

      //a11y
      $parent.find('.selected_option').remove();
      $this.addClass('active').siblings().removeClass('active');
      $this.append('<span class="blind selected_option">선택됨</span>');
      $(target).each((idx, item) => {
        $(item).children().eq(_index).show().siblings().hide();
      });
    });

    //초기값 제외 hide 처리
    Object.values(data.params).forEach(item => {
      const {
        el,
        default: _index = 0
      } = item;
      $(el).children().eq(_index).trigger('click');
    });
  }
};
const modal = exports.modal = {
  /** 모달오픈버튼 클릭시 dimm 처리와 모달 오픈 함수 */
  init() {
    //모달 오픈
    PT_STATE.$PROJECT.off('.click.clickModal').on('click.clickModal', '[data-role="btnModal"]', function (e) {
      e.preventDefault();
      const data = {
        $prevfocus: [],
        opt: {
          video: false,
          youtube: false,
          focus: false
        }
      };
      const $this = $(this);
      const $target = $($this.attr('data-target'));
      const target = $this.attr('data-target');
      const $closeModal = $(`[data-role="closeModal"][data-target="${target}"]`);
      const winTop = $window.scrollTop();
      const winHeight = $window.outerHeight();
      const targetHeight = $target.outerHeight();
      const headerHeight = !!$('header') ? $('header').outerHeight() : 0;
      const opt = $this.attr('data-option') ? JSON.parse($this.attr('data-option')) : data.opt;
      const {
        video = data.opt.video,
        youtube = data.opt.youtube,
        focus = data.opt.focus
      } = opt;
      const dimm_id = `dimm_${new Date().getTime()}`;
      // const tapHeight = !!$('.sec_kv_tab') ? $('.sec_kv_tab').outerHeight() : 0;
      // const bannerHeight = !!$('.ins-preview-wrapper') ? $('.ins-preview-wrapper').outerHeight() : 0;

      data.$prevfocus.push($this);
      winHeight > targetHeight ? $target.css('top', winTop + (winHeight - targetHeight) / 2 - headerHeight) : $target.css('top', winTop);
      focus ? $target.show().find(focus).trigger('focus') : $target.show().trigger('focus');

      //딤드 처리
      $('body').append(`<div id="${dimm_id}" class="dimm"></div>`);
      $(`#${dimm_id}`).css('z-index', +$target.css('z-index') - 1).fadeIn();
      $closeModal.attr('data-dimm', `#${dimm_id}`);
      if (!!video) {
        $target.find('video source').attr('src', video);
        $target.find('video')[0].load();
        if (!!opt.caption) {
          $target.find('video').after('<p data-role="caption">' + opt.caption + '</p>');
        }
      }
      if (!!youtube) {
        $target.find('iframe').attr('src', 'https://www.youtube.com/embed/' + youtube + '?rel=0&autoplay=1&howinfo=0&enablejsapi=1').on('load', function () {
          this.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        });
      }
      $target.on('keydown', function (e) {
        if ($target.is(':focus') && e.shiftKey && e.keyCode == 9) {
          e.preventDefault();
          $closeModal.trigger('focus');
        }
      });
      $closeModal.on('keydown', function (e) {
        if (!e.shiftKey && e.keyCode == 9) {
          e.preventDefault();
          $target.trigger('focus');
        }
      });

      // 모달 닫기
      PT_STATE.$PROJECT.off('click.closeModal').on('click.closeModal', '[data-role="closeModal"]', function (e) {
        e.preventDefault();
        const $this = $(this);
        const $target = $($this.attr('data-target'));
        const dimm_id = $this.attr('data-dimm');
        $(dimm_id).fadeOut(function () {
          $(this).remove();
        });
        $target.hide();
        data.$prevfocus.pop().trigger('focus');
        if (!!video) {
          $target.find('video source').attr('src', '');
          if (!!opt.caption) {
            $target.find('[data-role="caption"]').remove();
          }
        }
        if (!!youtube) {
          $target.find('iframe').attr('src', '');
        }
      });
    });
  }
};
const copy = exports.copy = {
  click() {
    const target = new ClipboardJS('[data-role="btnCopy"]');
    const $alertMsg = $('.alert_msg');
    target.on('success', function () {
      $alertMsg.fadeIn();
      setTimeout(function () {
        $alertMsg.fadeOut();
      }, 2800);
      // target.clearSelection();
    });
    target.on('error', function () {
      prompt('', target.data('clipboard-text'));
    });
    PT_STATE.$PROJECT.off('click.clickCopy').on('click.clickCopy', '[data-role="btnCopy"]', function (e) {
      e.preventDefault();
      const msg = $(this).data('alertMsg');
      if (msg) {
        $alertMsg.text(msg);
      } else {
        $alertMsg.text('해시태그가 복사되었습니다.');
      }
    });
  }
};
const countDownEvt = exports.countDownEvt = {
  pad(value) {
    return ('0' + Math.floor(value)).slice(-2);
  },
  init(el, datetime, type) {
    const _second = 1000;
    const _minute = _second * 60;
    const _hour = _minute * 60;
    const _day = _hour * 24;
    let timer;
    const _date = new Date(datetime).getTime();
    var html = '';
    var _el;
    var _time = {
      d: '00',
      h: '00',
      m: '00',
      s: '00'
    };
    function countDown() {
      var distance = _date - new Date().getTime();
      var days = pad(distance / _day);
      var hours = pad(distance % _day / _hour);
      var minutes = pad(distance % _hour / _minute);
      var seconds = pad(distance % _minute / _second);
      if (_time.d !== days) {
        _time.d = days;
        _el.eq(0).html(days);
      }
      if (_time.h !== hours) {
        _time.h = hours;
        _el.eq(1).html(hours);
      }
      if (_time.m !== minutes) {
        _time.m = minutes;
        _el.eq(2).html(minutes);
      }
      if (_time.s !== seconds) {
        _time.s = seconds;
        _el.eq(3).html(seconds);
      }

      // 카운트 종료
      if (distance < 0) {
        clearInterval(timer);
      }
    }
    if (type === 'flip') {
      html = ``;
    } else if (type === 'img') {
      html = ``;
    } else {
      html = `
                <div class="count_box">
                    <div class="count_slot">
                        <div class="count_num en">00</div>
                        <div class="count_txt">일</div>
                    </div>
                    <div class="count_slot">
                        <div class="count_num en">00</div>
                        <div class="count_txt">시간</div>
                    </div>
                    <div class="count_slot">
                        <div class="count_num en">00</div>
                        <div class="count_txt">분</div>
                    </div>
                    <div class="count_slot">
                        <div class="count_num en">00</div>
                        <div class="count_txt">초</div>
                    </div>
                </div>
            `;
    }
    $(el).html(html);
    _el = $(el).find('.count_num');
    timer = setInterval(countDown, 1000);
  }
};
const button = exports.button = {
  all(netFunnel) {
    this.btnPresent(netFunnel);
    this.btnBuy(netFunnel);
    this.btnCart(netFunnel);
    this.btnCouponBook(netFunnel);
  },
  btnPresent(netFunnel) {
    let $btnPresent = PT_STATE.$PROJECT.find('[data-role="btnPresent"]');
    if (!$btnPresent.length) return;
    PT_STATE.$PROJECT.off('click.click_pt_present').on('click.click_pt_present', '[data-role="btnPresent"]', function (e) {
      e.preventDefault();
      let $self = $(this);
      let sku = $self.attr('data-sku');
      if (sku && window.presentDirect) {
        if (!!netFunnel) {
          NetFunnel_Action(netFunnel, function (ev, ret) {
            presentDirect(sku, '_self');
          });
        } else {
          presentDirect(sku, '_self');
        }
      }
    });
  },
  btnBuy(netFunnel) {
    let $btnBuy = PT_STATE.$PROJECT.find('[data-role="btnBuy"]');
    if (!$btnBuy.length) return;
    PT_STATE.$PROJECT.off('click.click_pt_buy').on('click.click_pt_buy', '[data-role="btnBuy"]', function (e) {
      e.preventDefault();
      let $self = $(this);
      let gCode = $self.attr('data-gcode');
      let cpCode = $self.attr('data-cpcode');
      let compNo = $self.attr('data-comp') ? $self.attr('data-comp') : 312;
      let tradeIn = $self.attr('data-tradein') ? $self.attr('data-tradein') : 'N';
      //let ceTradeIn = $self.attr('data-ceTradeIn') ? $self.attr('data-ceTradeIn') : 'N';
      let galaxyClub = $self.attr('data-galaxyClub') ? $self.attr('data-galaxyClub') : 'N';
      let galaxyClubTpCd = $self.attr('data-galaxyClubTpCd') ? $self.attr('data-galaxyClubTpCd') : null;
      if (gCode && window.fnBuyDirectByMultiId) {
        if (!!netFunnel) {
          NetFunnel_Action(netFunnel, function (ev, ret) {
            fnBuyDirectByMultiId([{
              goodsId: gCode,
              qty: 1,
              compNo: compNo,
              tradeIn: tradeIn,
              //ceTradeIn: ceTradeIn,
              galaxyClub: galaxyClub,
              galaxyClubTpCd: galaxyClubTpCd
            }]);
          });
        } else {
          fnBuyDirectByMultiId([{
            goodsId: gCode,
            qty: 1,
            compNo: compNo,
            tradeIn: tradeIn,
            //ceTradeIn: ceTradeIn,
            galaxyClub: galaxyClub,
            galaxyClubTpCd: galaxyClubTpCd
          }]);
        }
      }
    });
  },
  btnCart(netFunnel) {
    let $btnCart = PT_STATE.$PROJECT.find('[data-role="btnCart"]');
    if (!$btnCart.length) return;
    PT_STATE.$PROJECT.off('click.click_pt_cart').on('click.click_pt_cart', '[data-role="btnCart"]', function (e) {
      e.preventDefault();
      let $self = $(this);
      let sku = $self.attr('data-sku');
      let compNo = $self.attr('data-comp') ? $self.attr('data-comp') : 312;
      if (sku && window.fnCartDirect) {
        if (!!netFunnel) {
          NetFunnel_Action(netFunnel, function (ev, ret) {
            fnCartDirect([{
              mdlCode: sku,
              qty: 1,
              compNo: compNo
            }]);
            ;
          });
        } else {
          fnCartDirect([{
            mdlCode: sku,
            qty: 1,
            compNo: compNo
          }]);
          ;
        }
      }
    });
  },
  btnCouponBook(netFunnel) {
    let $btnCouponBook = PT_STATE.$PROJECT.find('[data-role="btnCouponBook"]');
    if (!$btnCouponBook.length) return;
  }
};
if (!window.PT_STATE) window.PT_STATE = {};
window.PT_STATE.$PROJECT = PT_STATE.$PROJECT;
window.PT_STATE.eventState = PT_STATE.eventState;

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.component_tab = void 0;
var _bs_common = require("./bs_common");
const component_tab = exports.component_tab = {
  init() {
    //기본값
    let flag = false;
    let $component = $('[data-cptno]'); // 컴포넌트 
    let $category = $('[data-compo-cate]'); // 카테고리
    let categorySwiper = []; //각 카테고리 스와이퍼
    let cateEnd = []; //각 카테고리의 마지막 컴포넌트
    let cateSwp = []; //모바일 카테고리 스와이퍼 제어 true:작동on/false:작동off 초기값 true
    let cateSticky = []; //컴포넌트 스티키 제어 true:스티키/false:스티키 제거 초기값 true
    let cateDepth = []; //컴포넌트 탭 제어 true:스티키/false:스티키 제거 초기값 true
    let dataCompCate = []; // 컴포넌트 호출함수 구분 product-card / product-selection
    let dataCptno = []; // 전체 콤포넌트 번호 담는 변수
    let compFirst = []; // 스크롤로 자기영역 위치시 카테고리의 ".on"위치의 컴포넌트만 불러오기 할때 사용. 처음 한번만 실행됨
    let compLength = 0;
    let compSumLength = 0;
    let url = location.href;
    let _scrollTop = $(window).scrollTop();
    $category.each(function (index, el) {
      let $this = $(this);
      $this.addClass('pt_comp_cate' + index);
      $this.css('height', $this.find('.pt_slider_category_wrap').outerHeight());

      // 뎁스 탭 사용 시 높이값 auto  
      if ($this.attr('data-depth') === 'true') $this.css('height', 'auto');
      compFirst[index] = true;
      if ($this.attr('data-swiper')) {
        cateSwp[index] = $this.attr('data-swiper');
      } else {
        cateSwp[index] = 'true';
      }
      if ($this.attr('data-sticky')) {
        cateSticky[index] = $this.attr('data-sticky');
      } else {
        cateSticky[index] = 'true';
      }
      if ($this.attr('data-depth')) {
        cateDepth[index] = $this.attr('data-depth');
      } else {
        cateDepth[index] = 'true';
      }
    });

    //설정영역
    $category.each(function (index, el) {
      let $this = $(this);
      let cateActive = $this.find('li').closest('.on').index();

      //탭동작
      compLength += $this.find('li').length;
      $component.each(function (idx, item) {
        dataCptno[idx] = $component.eq(idx).attr('data-cptno');
        if (compSumLength <= idx && idx < compLength) {
          // 컴포넌트 번호 카테고리 버튼에 넣기
          $this.find('li').eq(idx - compSumLength).find('a').attr('data-cpntnum', dataCptno[idx]);
        }
      });
      $component.each(function (idx, item) {
        if (compSumLength <= idx && idx < compLength) {
          if (idx == compSumLength + cateActive) {
            $component.eq(idx).removeClass('pt_hide');
          } else {
            $component.eq(idx).addClass('pt_hide');
          }
        }
      });
      compSumLength += $this.find('li').length;
      if (cateSwp[index] == 'true') {
        categorySwiper[index] = new Swiper('.pt_comp_cate' + index + ' .swiper-container', {
          allowTouchMove: true,
          slidesPerView: 'auto',
          watchOverflow: true,
          // 다음슬라이드가 없을때 pager, button 숨김 여부 설정
          observer: true,
          observeParents: true,
          observeSlideChildren: true,
          breakpoints: {
            769: {
              allowTouchMove: false
            }
          },
          on: {
            init: function () {
              // 슬라이드를 안해도 될때 자동으로 체크
              if (this.isLocked == true) {
                $this.addClass('pt_noSwiper');
              }
            },
            breakpoint: function () {
              let that = this;
              setTimeout(function () {
                that.slideTo(0, 0);
              }, 150);
            }
          }
        });
      } else {
        $this.addClass('pt_noSwiper');
      }

      // 스크롤이 해당영역 위치시 컴포넌트 호출
      if (_scrollTop >= $this.find('.pt_slider_category_sticky').offset().top - $(window).height()) {
        // console.log(_scrollTop >= $this.find('.pt_slider_category_sticky').offset().top - $(window).height());
        if (compFirst[index] == true) {
          // 첫번째 컴포넌트 가져오기
          let cpntNum = $this.find('li.on').find('a').attr('data-cpntnum');
          dataCompCate[index] = $this.attr('data-compo-cate');
          if (url.indexOf('www.samsung.com/sec') > -1) {
            if (cpntNum) {
              if (dataCompCate[index] == "product-card") {
                fnGetProdCardCompGoodsList(cpntNum);
              } else if (dataCompCate[index] == "product-selection") {
                fnGetProdSelectionCompGoodsList(cpntNum);
              }
            }
          }
          $this.find('li.on').find('a').removeAttr('data-cpntnum');
          compFirst[index] = false;
        }
      }
      if (cateDepth[index] == 'true') {
        let depthTab = $('.pt_comp_cate' + index).find('[data-depth-tab]');
        let activeTab = depthTab.find('.on').attr('data-ty');
        let cateWrap = $('.sec_comptab .pt_cate');
        depthTab.find('.on').trigger('click');
        depthTab.siblings('.pt_slider_category_sticky').find('li').addClass('hidden');
        depthTab.siblings('.pt_slider_category_sticky').find('li.' + activeTab).removeClass('hidden');
        depthTab.find('a').on('click', function () {
          let ty = $(this).attr('data-ty');
          depthTab.find('a').removeClass('on');
          $(this).addClass('on');
          depthTab.siblings('.pt_slider_category_sticky').find('li').addClass('hidden');
          depthTab.siblings('.pt_slider_category_sticky').find('li.' + ty).removeClass('hidden');
          $('.' + ty).eq(0).find('a').trigger('click');
        });
      }
    });
    let scrollMove = function () {
      _scrollTop = $(window).scrollTop();
      compLength = 0;
      compSumLength = 0;
      $category.each(function (index, el) {
        let $this = $(this);

        //카테고리 높이값 자동조절
        $this.css('height', $this.find('.pt_slider_category_wrap').outerHeight());
        // 뎁스 탭 사용 시 높이값 auto    
        if ($this.attr('data-depth') === 'true') $this.css('height', 'auto');

        //카테고리 li갯수 담기
        compLength += $this.find('li').length;

        //각카테고리의 마지막 컴포넌트 가져오기
        cateEnd[index] = $component.eq(compLength - 1);

        // 스크롤시 해당영역 컴포넌트 호출
        if (_scrollTop >= $this.find('.pt_slider_category_sticky').offset().top - $(window).height()) {
          if (compFirst[index] == true) {
            // 첫번째 컴포넌트 가져오기
            let cpntNum = $this.find('li.on').find('a').attr('data-cpntnum');
            dataCompCate[index] = $this.attr('data-compo-cate');
            if (url.indexOf('www.samsung.com/sec') > -1) {
              if (cpntNum) {
                if (dataCompCate[index] == "product-card") {
                  fnGetProdCardCompGoodsList(cpntNum);
                } else if (dataCompCate[index] == "product-selection") {
                  fnGetProdSelectionCompGoodsList(cpntNum);
                }
              }
            }
            $this.find('li.on').find('a').removeAttr('data-cpntnum');
            compFirst[index] = false;
          }
        }

        // 컴포넌트 카테고리 sticky 처리
        if (cateSticky[index] != 'false' && _scrollTop >= $this.find('.pt_slider_category_sticky').offset().top && _scrollTop <= cateEnd[index].offset().top + cateEnd[index].outerHeight() - $this.outerHeight() - _bs_common.util.pxToVw(90, 90)) {
          $this.find('.pt_slider_category_sticky').addClass('fixed');
        } else {
          $this.find('.pt_slider_category_sticky').removeClass('fixed');
        }
      });
    };
    $(window).on('scroll.scroll', scrollMove);

    // 컴포넌트 카테고리 이벤트(클릭시 위치이동)
    _bs_common.PT_STATE.$PROJECT.off('click.compClickCate').on('click.compClickCate', '[data-compo-cate] .pt_category_list a', function (e) {
      e.preventDefault();
      let $this = $(this).closest('li');
      let click_idx = $this.index();
      let parenstName = $this.closest('[data-compo-cate]');
      let _parenstScrollTop = parenstName.offset().top;
      _scrollTop = $(window).scrollTop();
      compLength = 0;
      compSumLength = 0;
      $('.pt_category_list a').find('.selected_option').remove();
      $(this).append('<span class="blind selected_option">선택됨</span>');
      if (!flag) {
        flag = true;
        $this.closest('.pt_slider_category_wrap').find('.pt_category_list').each(function () {
          $(this).find('li').eq(click_idx).addClass('on').siblings().removeClass('on');
          let cpntNum = $(this).find('li').eq(click_idx).find('a').attr('data-cpntnum');
          let compCate = parenstName.attr('data-compo-cate');
          if (cpntNum) {
            if (url.indexOf('www.samsung.com/sec') > -1) {
              if (cpntNum) {
                if (compCate == "product-card") {
                  fnGetProdCardCompGoodsList(cpntNum);
                } else if (compCate == "product-selection") {
                  fnGetProdSelectionCompGoodsList(cpntNum);
                }
              }
            }
          }
          $(this).find('li').eq(click_idx).find('a').removeAttr('data-cpntnum');
        });
        $category.each(function (index, el) {
          let $this = $(this);
          compLength += $this.find('li').length;
          cateEnd[index] = $component.eq(compLength - 1);
          if (parenstName.hasClass('pt_comp_cate' + index)) {
            $component.each(function (idx, item) {
              if (compSumLength <= idx && idx < compLength) {
                if (click_idx + compSumLength == idx) {
                  $component.eq(idx).removeClass('pt_hide');
                  $component.eq(idx).find('.component-contents').css('opacity', 0);
                } else {
                  $component.eq(idx).addClass('pt_hide');
                }
              }
            });
            if ($(window).outerWidth() <= 768 && cateSwp[index] == 'true') {
              categorySwiper[index].slideTo(click_idx);
            }
            let compTarget = $component.eq(click_idx + compSumLength);
            $(compTarget).attr('tabindex', 0);

            // 컴포넌트 영역 위쪽에서 클릭했을때만 애니메이션 이동
            // if(_scrollTop < _parenstScrollTop){
            //     $('html, body').stop().animate({scrollTop:compTarget.offset().top - $this.find('.pt_slider_category_wrap').outerHeight() / 1.01}, 500, function(){
            //         $(compTarget).focusout(function(){
            //             $(compTarget).removeAttr('tabindex');
            //         });
            //     });
            // }else{
            //     $('html, body').stop().animate({scrollTop:compTarget.offset().top - $this.find('.pt_slider_category_wrap').outerHeight() / 1.01}, 1, function(){
            //         $(compTarget).focusout(function(){
            //             $(compTarget).removeAttr('tabindex');
            //         });
            //     });
            // }
            // $(compTarget).focus();

            flag = false;
          }
          compSumLength += $this.find('li').length;
        });
      }
      setTimeout(function () {
        $(window).resize();
        $('div.wrap-component .component-contents').animate({
          opacity: '1'
        }, 300);
      }, 130);
    });
    _bs_common.PT_STATE.$PROJECT.off('click.popupCate').on('click.popupCate', '.pt_btn_popup_category', function (e) {
      e.preventDefault();
      if ($(this).closest('.pt_slider_category_wrap').hasClass('popup')) {
        $(this).closest('.pt_slider_category_wrap').removeClass('popup');
        $(this).attr('title', '카테고리 탭 메뉴 열기').find('span.blind').text('카테고리 탭 메뉴 열기');
      } else {
        $(this).closest('.pt_slider_category_wrap').addClass('popup');
        $(this).attr('title', '카테고리 탭 메뉴 닫기').find('span.blind').text('카테고리 탭 메뉴 닫기');
      }
    });
  }
};

},{"./bs_common":4}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.promoCoupon = exports.coupon = void 0;
var _bs_common = require("./bs_common");
// 단일쿠폰 다운로드 및 페이지 내 전체쿠폰 다운로드
const coupon = exports.coupon = {
  init() {
    // 쿠폰 기한 설정
    var couponLimit = '2022.03.31';
    var messager = {
      data: {
        content: '',
        btnText: '확인',
        okBtnText: '확인',
        cancelBtnText: '취소'
      },
      setAlertData: function (content, btnText, callback) {
        messager.data.content = content;
        messager.data.btnText = btnText;
        if (callback != undefined) {
          messager.data.callback = callback;
        } else {
          delete messager.data[callback];
        }
      },
      setConfirmData: function (content, okBtnText, cancelBtnText, callback) {
        messager.data.content = content;
        messager.data.okBtnText = okBtnText;
        messager.data.cancelBtnText = cancelBtnText;
        if (callback != undefined) {
          messager.data.callback = callback;
        } else {
          delete messager.data[callback];
        }
      },
      alert: function (content, btnText, callback) {
        messager.setAlertData(content, btnText, callback);
        commonAlert(messager.data);
        openLayer('commonAlert');
      },
      confirm: function (content, okBtnText, cancelBtnText, callback) {
        messager.setConfirmData(content, okBtnText, cancelBtnText, callback);
        commonConfirm(messager.data);
        openLayer('commonConfirm');
      },
      // 단일 쿠폰 다운로드 실패
      singleCouponDownloadFailAlert: function (content) {
        messager.alert(content, '확인', function () {
          $('html').scrollTop(0);
        });
      },
      // 예외 처리 없는 다운로드 성공
      mustCouponDownloadSuccessAlert: function () {
        var content = '';
        content += '쿠폰 다운로드가 완료 되었습니다.<br/>';
        content += '* ' + couponLimit + ' 까지 사용가능<br/><br/>';
        content += '다운로드 받으신 쿠폰은 나의 정보 > 쿠폰존 에서 확인 가능합니다.';
        messager.alert(content, '확인');
        // messager.alert(content, '확인', function() {
        //   window.location.href = '${view.stContextPath}' + 'mypage/coupon/indexCouponDownload/';
        // });
      },
      // 쿠폰 등록 성공
      successInsertSerialCoupon: function () {
        var content = '';
        content += '쿠폰이 등록되었습니다.<br/>';
        content += '등록한 쿠폰은 보유쿠폰에서 확인 가능합니다.';
        messager.alert(content, '확인', function () {
          $('#popupEventCode .con-bottom').hide();
          $('#popupEventCode .pop-close').trigger('click');
          $('html').scrollTop(0);
        });
      },
      //쿠폰 등록 실패
      failInsertSerialCoupon: function (content) {
        messager.alert(content, '확인', function () {
          $('html').scrollTop(0);
        });
      }
    };
    function downloadCoupon(type, objCoupon) {
      returnUrl = window.location.pathname;
      stPath = $('#openPop').data('st-path');
      var options = {
        url: stPath + 'xhr/member/getSession',
        type: 'POST',
        done: function (data) {
          var session = JSON.parse(data);
          if (session.mbrNo == 0) {
            makeAlert('로그인 후 참여 가능합니다.', fnGoLoginPage);
          } else {
            var url = '';
            if (type === 'single') {
              url = stPath + 'xhr/mypage/coupon/couponBookDownload';
            }
            if (type === 'multi') {
              url = stPath + 'xhr/mypage/coupon/couponDownload';
            }
            var options = {
              url: url,
              data: objCoupon,
              done: function (result) {
                messager.mustCouponDownloadSuccessAlert();
              }
            };
            ajax.call(options);
          }
        }
      };
      ajax.call(options);
    }

    // 전체 쿠폰 다운로드 이벤트 트리거
    _bs_common.PT_STATE.$PROJECT.off('click.couponAll').on('click.couponAll', '[data-role="btnCouponAll"]', function (e) {
      e.preventDefault();
      var strArr = [];
      $('[data-role="btnCoupon"]').each(function (i) {
        strArr.push('{cpBookNo: \'' + $(this).attr('data-cpNum') + '\'}');
      });
      downloadCoupon('multi', {
        couponBookJsonStr: '[' + strArr.join(', ') + ']'
      });
    });

    // 단일 쿠폰 다운로드 이벤트 트리거
    _bs_common.PT_STATE.$PROJECT.off('click.coupon').on('click.coupon', '[data-role="btnCoupon"]', function (e) {
      e.preventDefault();
      downloadCoupon('single', {
        cpBookNo: $(this).attr('data-cpNum')
      });
    });
  }
};

// [프로모션 쿠폰 다운 SCRIPT]
const promoCoupon = exports.promoCoupon = {
  init() {
    var messager = {
      data: {
        content: "",
        btnText: "확인",
        okBtnText: "확인",
        cancelBtnText: "취소"
      },
      setAlertData: function (content, btnText, callback) {
        messager.data.content = content;
        messager.data.btnText = btnText;
        if (callback != undefined) {
          messager.data.callback = callback;
        } else {
          delete messager.data[callback];
        }
      },
      setConfirmData: function (content, okBtnText, cancelBtnText, callback) {
        messager.data.content = content;
        messager.data.okBtnText = okBtnText;
        messager.data.cancelBtnText = cancelBtnText;
        if (callback != undefined) {
          messager.data.callback = callback;
        } else {
          delete messager.data[callback];
        }
      },
      alert: function (content, btnText, callback) {
        messager.setAlertData(content, btnText, callback);
        commonAlert(messager.data);
        openLayer('commonAlert');
      },
      confirm: function (content, okBtnText, cancelBtnText, callback) {
        messager.setConfirmData(content, okBtnText, cancelBtnText, callback);
        commonConfirm(messager.data);
        openLayer('commonConfirm');
      },
      // 단일 쿠폰 다운로드 실패
      singleCouponDownloadFailAlert: function (content) {
        messager.alert(content, "확인", function () {
          $("html").scrollTop(0);
        });
      },
      // 전체 다운로드 성공
      allCouponDownloadSuccessAlert: function () {
        var content = "";
        content += "쿠폰이 발급되었습니다.<br/>";
        content += "발급된 쿠폰은 보유쿠폰에서 확인 가능합니다.";
        messager.alert(content, "확인", function () {
          //window.location.href="/sec/"+"mypage/coupon/indexCouponDownload/";
        });
      }
    };
    function PromotionCouponDown(couponNum) {
      returnUrl = window.location.pathname;
      stPath = $('#openPop').data('st-path');
      var options = {
        url: stPath + "xhr/mypage/coupon/promotionCouponDownload",
        // 쿠폰 (단일/복수) 다운가능
        data: {
          cpNos: [couponNum]
        },
        done: function (result) {
          if (result.exCd === 'COP0024') {
            makeAlert('로그인 후 다운 가능합니다.', fnGoLoginPage);
          } else {
            if (result.couponDownYn == "Y") {
              //쿠폰다운받기 성공여부
              messager.allCouponDownloadSuccessAlert();
            } else {
              if (result.exCd == "COP0008") {
                //수량부족 에러코드  <<커스텀하고자하는 에러코드만 조건추가
                messager.singleCouponDownloadFailAlert("오늘 데일리 선착순 쿠폰이 모두 소진되었습니다.<br/> 내일 다시 도전해보세요!");
              } else if (result.exCd == "COP0009") {
                messager.singleCouponDownloadFailAlert("이미 다운받으신 쿠폰입니다.<br/>보유쿠폰함을 확인해 주세요!");
              } else {
                //다른예외 코드는 기존의 시스템 정의 문구 출력
                messager.singleCouponDownloadFailAlert(result.exMsg);
              }
            }
          }
        }
      };
      ajax.call(options);
    }

    // 단일/복수 쿠폰 다운로드 이벤트 트리거
    _bs_common.PT_STATE.$PROJECT.off('click.couponPromo').on('click.couponPromo', '[data-role="btnCouponPromo"]', function (e) {
      e.preventDefault();
      PromotionCouponDown($(this).attr('data-cpNum'));
    });
  }
};

},{"./bs_common":4}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.modal = void 0;
var _bs_common = require("./bs_common");
const modal = exports.modal = {
  /** 모달오픈버튼 클릭시 dimm 처리와 모달 오픈 함수 */
  init() {
    //모달 오픈
    _bs_common.PT_STATE.$PROJECT.off('.click.clickModal').on('click.clickModal', '[data-role="btnModal"]', function (e) {
      e.preventDefault();
      const data = {
        $prevfocus: [],
        opt: {
          video: false,
          youtube: false,
          focus: false
        }
      };
      const $this = $(this);
      const $target = $($this.attr('data-target'));
      const target = $this.attr('data-target');
      const $closeModal = $(`[data-role="closeModal"][data-target="${target}"]`);
      const winTop = $(window).scrollTop();
      const winHeight = $(window).outerHeight();
      const targetHeight = $target.outerHeight();
      const headerHeight = !!$('header').length ? $('header').outerHeight() : 0;
      const tabHeight = !!$('.sec_kv_tab').length ? $('.sec_kv_tab').outerHeight() : 0;
      // const bannerHeight = !!$('.ins-preview-wrapper').length ? $('.ins-preview-wrapper').outerHeight() : 0;
      const opt = $this.attr('data-option') ? JSON.parse($this.attr('data-option')) : data.opt;
      const {
        video = data.opt.video,
        youtube = data.opt.youtube,
        focus = data.opt.focus
      } = opt;
      const dimm_id = `dimm_${new Date().getTime()}`;
      data.$prevfocus.push($this);
      winHeight > targetHeight ? $target.css('top', winTop + (winHeight - targetHeight) / 2 - headerHeight - tabHeight) : $target.css('top', winTop);
      focus ? $target.show().find(focus).trigger('focus') : $target.show().trigger('focus');

      //딤드 처리
      $('body').append(`<div id="${dimm_id}" class="dimm"></div>`);
      $(`#${dimm_id}`).css('z-index', +$target.css('z-index') - 1).fadeIn();
      $closeModal.attr('data-dimm', `#${dimm_id}`);
      if (!!video) {
        $target.find('video source').attr('src', video);
        $target.find('video')[0].load();
        if (!!opt.caption) {
          $target.find('video').after('<p data-role="caption">' + opt.caption + '</p>');
        }
      }
      if (!!youtube) {
        $target.find('iframe').attr('src', 'https://www.youtube.com/embed/' + youtube + '?rel=0&autoplay=1&howinfo=0&enablejsapi=1').on('load', function () {
          this.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        });
      }
      $target.on('keydown', function (e) {
        if ($target.is(':focus') && e.shiftKey && e.keyCode == 9) {
          e.preventDefault();
          $closeModal.trigger('focus');
        }
      });
      $closeModal.on('keydown', function (e) {
        if (!e.shiftKey && e.keyCode == 9) {
          e.preventDefault();
          $target.trigger('focus');
        }
      });

      // 모달 닫기
      _bs_common.PT_STATE.$PROJECT.off('click.closeModal').on('click.closeModal', '[data-role="closeModal"]', function (e) {
        e.preventDefault();
        const $this = $(this);
        const $target = $($this.attr('data-target'));
        const dimm_id = $this.attr('data-dimm');
        $(dimm_id).fadeOut(function () {
          $(this).remove();
        });
        $target.hide();
        data.$prevfocus.pop().trigger('focus');
        if (!!video) {
          $target.find('video')[0].pause();
          $target.find('video source').attr('src', '');
          if (!!opt.caption) {
            $target.find('[data-role="caption"]').remove();
          }
        }
        if (!!youtube) {
          $target.find('iframe').attr('src', '');
        }
      });
    });
  },
  toggle(params) {
    // 텝
    _bs_common.util.setEventState('clickAncInModal', params);
    const dataAnchor = {
      opt: {
        speed: 500,
        scroll: [0, 0]
      },
      params: _bs_common.util.getEventState('clickAncInModal')
    };

    // 스크롤 방지
    const noScroll = {
      scrollY: 0,
      add() {
        this.scrollY = window.scrollY;
        $('body').addClass('pt_no_scroll').css('top', `-${this.scrollY}px`);
      },
      remove() {
        $('body').removeClass('pt_no_scroll');
        window.scrollTo(0, this.scrollY);
      }
    };

    // debounce
    function debounceEvt(e, target, fn, ms) {
      let timer;
      target.on(e, function () {
        if (timer) {
          clearTimeout(timer);
        }
        timer = setTimeout(fn, ms);
      });
    }

    // setTimeout
    function setTimeoutEvt(fn, ms) {
      let timer;
      if (timer) {
        clearTimeout(timer);
      }
      timer = setTimeout(fn, ms);
    }
    ;

    // modal
    function modalEvt() {
      if (!_bs_common.util.isMobile()) {
        // console.log('pc');

        //모달 오픈
        _bs_common.PT_STATE.$PROJECT.off('click.clickModal').on('click.clickModal', '[data-role="btnModal"]', function (e) {
          e.preventDefault();
          const data = {
            $prevfocus: [],
            opt: {
              video: false,
              youtube: false,
              focus: false
            }
          };
          const $this = $(this);
          const $target = $($this.attr('data-target'));
          const target = $this.attr('data-target');
          const $closeModal = $(`[data-role="closeModal"][data-target="${target}"]`);
          const winTop = $(window).scrollTop();
          const winHeight = $(window).outerHeight();
          const targetHeight = $target.outerHeight();
          const headerHeight = !!$('header').length ? $('header').outerHeight() : 0;
          const tabHeight = !!$('.sec_kv_tab').length ? $('.sec_kv_tab').outerHeight() : 0;
          // const bannerHeight = !!$('.ins-preview-wrapper').length ? $('.ins-preview-wrapper').outerHeight() : 0;
          const opt = $this.attr('data-option') ? JSON.parse($this.attr('data-option')) : data.opt;
          const {
            video = data.opt.video,
            youtube = data.opt.youtube,
            focus = data.opt.focus
          } = opt;
          const dimm_id = `dimm_${new Date().getTime()}`;
          data.$prevfocus.push($this);
          // $target.css('top', '');
          // 팝업 열릴때 스크롤 방지
          noScroll.add();
          winHeight > targetHeight ? $target.css('top', winTop + (winHeight - targetHeight) / 2 - headerHeight - tabHeight) : $target.css('top', winTop);
          $target.addClass('pt_modal_on');
          focus ? $target.find(focus).trigger('focus') : $target.trigger('focus');
          $target.find('.pt_modal_body').scrollTop(0);

          //딤드 처리
          $('body').append(`<div id="${dimm_id}" class="dimm"></div>`);
          $(`#${dimm_id}`).css('z-index', +$target.css('z-index') - 1).fadeIn();
          $closeModal.attr('data-dimm', `#${dimm_id}`);
          if (!!video) {
            $target.find('video source').attr('src', video);
            $target.find('video')[0].load();
            if (!!opt.caption) {
              $target.find('video').after('<p data-role="caption">' + opt.caption + '</p>');
            }
          }
          if (!!youtube) {
            $target.find('iframe').attr('src', 'https://www.youtube.com/embed/' + youtube + '?rel=0&autoplay=1&howinfo=0&enablejsapi=1').on('load', function () {
              this.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
            });
          }
          $target.on('keydown', function (e) {
            if ($target.is(':focus') && e.shiftKey && e.keyCode == 9) {
              e.preventDefault();
              $closeModal.trigger('focus');
            }
          });
          $closeModal.on('keydown', function (e) {
            if (!e.shiftKey && e.keyCode == 9) {
              e.preventDefault();
              $target.trigger('focus');
            }
          });

          // 모달 닫기
          _bs_common.PT_STATE.$PROJECT.off('click.closeModal').on('click.closeModal', '[data-role="closeModal"]', function (e) {
            e.preventDefault();
            const $this = $(this);
            const $target = $($this.attr('data-target'));
            const dimm_id = $this.attr('data-dimm');

            // 팝업 닫힐때 스크롤 방지 해제
            noScroll.remove();
            $(dimm_id).fadeOut(function () {
              $(this).remove();
            });
            $target.removeClass('pt_modal_on');
            $(data.$prevfocus).trigger('focus');
            data.$prevfocus.pop();
            if (!!video) {
              $target.find('video')[0].pause();
              $target.find('video source').attr('src', '');
              if (!!opt.caption) {
                $target.find('[data-role="caption"]').remove();
              }
            }
            if (!!youtube) {
              $target.find('iframe').attr('src', '');
            }
          });
        });
      } else {
        // console.log('mo');

        //모달 오픈
        _bs_common.PT_STATE.$PROJECT.off('click.clickModal').on('click.clickModal', '[data-role="btnModal"]', function (e) {
          e.preventDefault();
          const data = {
            $prevfocus: [],
            opt: {
              video: false,
              youtube: false,
              focus: false
            }
          };
          const $this = $(this);
          const $target = $($this.attr('data-target'));
          const target = $this.attr('data-target');
          const $closeModal = $(`[data-role="closeModal"][data-target="${target}"]`);
          const winTop = $(window).scrollTop();
          const opt = $this.attr('data-option') ? JSON.parse($this.attr('data-option')) : data.opt;
          const {
            video = data.opt.video,
            youtube = data.opt.youtube,
            focus = data.opt.focus
          } = opt;
          const dimm_id = `dimm_${new Date().getTime()}`;
          // const targetData = Object.values(dataAnchor.params).filter(item => item.group === $target.attr('id'));
          const targetData = Object.values(dataAnchor.params).filter(item => item.group === $target.attr('id'));
          const max = targetData.length - 1;
          data.$prevfocus.push($this);
          $target.css('top', '');
          $target.find('.pt_modal_body').scrollTop(0);

          // 팝업 열릴때 스크롤 방지
          noScroll.add();
          $('body').append(`<div id="${dimm_id}" class="dimm"></div>`);
          $closeModal.attr('data-dimm', `#${dimm_id}`);
          $(`#${dimm_id}`).css('z-index', 111).fadeIn();
          $('[data-buying-sticky]').addClass('pt_move');
          if ($('.pt_nav')) {
            // 바잉툴 상단 영역 펼침/닫힘에 맞게 수정 필요
            $('.pt_nav').addClass('pt_nav_on');
            setTimeoutEvt(function () {
              $target.addClass('pt_modal_on');
            }, 150);
            setTimeoutEvt(function () {
              focus ? $target.find(focus).trigger('focus') : $target.trigger('focus');
              $target.removeClass('pt_modal_init');
            }, 300);
          } else {
            $target.addClass('pt_modal_on');
            focus ? $target.find(focus).trigger('focus') : $target.trigger('focus');
            setTimeoutEvt(function () {
              $target.removeClass('pt_modal_init');
            }, 150);
          }
          if (!!video) {
            $target.find('video source').attr('src', video);
            $target.find('video')[0].load();
            if (!!opt.caption) {
              $target.find('video').after('<p data-role="caption">' + opt.caption + '</p>');
            }
          }
          if (!!youtube) {
            $target.find('iframe').attr('src', 'https://www.youtube.com/embed/' + youtube + '?rel=0&autoplay=1&howinfo=0&enablejsapi=1').on('load', function () {
              this.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
            });
          }
          $target.on('keydown', function (e) {
            if ($target.is(':focus') && e.shiftKey && e.keyCode == 9) {
              e.preventDefault();
              $closeModal.trigger('focus');
            }
          });
          $closeModal.on('keydown', function (e) {
            if (!e.shiftKey && e.keyCode == 9) {
              e.preventDefault();
              $target.trigger('focus');
            }
          });

          // 텝
          const wrapper = $target.find('.pt_modal_body');
          let wrapperTop,
            targetTop = [],
            targetBottom = [];
          setTimeoutEvt(function () {
            wrapperTop = wrapper.offset().top;
            for (let i = 0; i <= max; i++) {
              const $ancTarget = $(targetData[i].target);
              targetTop.push($ancTarget.offset().top - wrapperTop);
              targetBottom.push($ancTarget.offset().top - wrapperTop + $ancTarget.outerHeight());
            }
          }, 300);
          $target.find('.pt_on').append('<span class="blind pt_selected_txt">선택됨</span>');
          _bs_common.PT_STATE.$PROJECT.off('click.clickAncModal').on('click.clickAncModal', '[data-role-anchor-modal]', function (e) {
            e.preventDefault();
            const $this = $(this);
            const index = $this.parent().index();
            const {
              target,
              speed = dataAnchor.opt.speed,
              scroll = dataAnchor.opt.scroll
            } = _bs_common.util.findItem(targetData, 'el', `[data-role-anchor-modal="${$this.attr('data-role-anchor-modal')}"]`);
            $this.parent().addClass('pt_on').append('<span class="blind pt_selected_txt">선택됨</span>').siblings().removeClass('pt_on').find('.pt_selected_txt').remove();
            $(target).attr('tabindex', 0);
            $(wrapper).stop().animate({
              scrollTop: targetTop[index] + _bs_common.util.pxToVw(scroll[0], scroll[1])
            }, speed, function () {
              $(target).focusout(function () {
                $(target).removeAttr('tabindex');
              });
            });
            $(target).focus();
          });
          debounceEvt('scroll', wrapper, function () {
            const sct = wrapper.scrollTop();
            if (sct == 0) {
              // 최상단
              $(targetData[0].el).parent().addClass('pt_on').siblings().removeClass('pt_on');
              if (!$(targetData[0].el).siblings('.pt_selected_txt').length) {
                $(targetData[0].el).parent().append('<span class="blind pt_selected_txt">선택됨</span>').siblings().find('.pt_selected_txt').remove();
              }
            } else if (Math.floor(sct + wrapper.outerHeight()) > Math.floor(wrapper.children('.pt_modal_outer').outerHeight() - 10)) {
              // 최하단
              $(targetData[max].el).parent().addClass('pt_on').siblings().removeClass('pt_on');
              if (!$(targetData[max].el).siblings('.pt_selected_txt').length) {
                $(targetData[max].el).parent().append('<span class="blind pt_selected_txt">선택됨</span>').siblings().find('.pt_selected_txt').remove();
              }
            } else {
              for (let i = 0; i <= max; i++) {
                if (sct >= targetTop[i] && sct <= targetBottom[i] - 1) {
                  $(targetData[i].el).parent().addClass('pt_on').siblings().removeClass('pt_on');
                  if (!$(targetData[i].el).siblings('.pt_selected_txt').length) {
                    $(targetData[i].el).parent().append('<span class="blind pt_selected_txt">선택됨</span>').siblings().find('.pt_selected_txt').remove();
                  }
                }
              }
            }
          }, 150);

          // 모달 닫기
          _bs_common.PT_STATE.$PROJECT.off('click.closeModal').on('click.closeModal', '[data-role="closeModal"]', function (e) {
            e.preventDefault();
            const $this = $(this);
            const $target = $($this.attr('data-target'));
            const dimm_id = $this.attr('data-dimm');

            // 팝업 닫힐때 스크롤 방지 해제
            noScroll.remove();
            $(dimm_id).fadeOut(function () {
              $(this).remove();
            });
            $('[data-buying-sticky]').removeClass('pt_move');
            if ($('.pt_nav')) {
              // 바잉툴 상단 영역 펼침/닫힘에 맞게 수정 필요
              $('.pt_nav').removeClass('pt_nav_on');
              $target.removeClass('pt_modal_on');
              setTimeoutEvt(function () {
                $(data.$prevfocus).trigger('focus');
                data.$prevfocus.pop();
                $target.addClass('pt_modal_init');
              }, 150);
            } else {
              $target.removeClass('pt_modal_on');
              setTimeoutEvt(function () {
                $(data.$prevfocus).trigger('focus');
                data.$prevfocus.pop();
                $target.addClass('pt_modal_init');
              }, 150);
            }
            if (!!video) {
              $target.find('video source').attr('src', '');
              if (!!opt.caption) {
                $target.find('[data-role="caption"]').remove();
              }
            }
            if (!!youtube) {
              $target.find('iframe').attr('src', '');
            }
          });
        });
      }
    }

    // run
    modalEvt();

    // resize
    let isMobileInit = _bs_common.util.isMobile();
    debounceEvt('resize', $(window), function () {
      if (isMobileInit == _bs_common.util.isMobile()) {
        return;
      } else {
        isMobileInit = _bs_common.util.isMobile();
        $('[data-role="closeModal"]').trigger('click');
        modalEvt();
      }
    }, 150);
  }
};

},{"./bs_common":4}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.page_tab = void 0;
var _bs_common = require("./bs_common");
const page_tab = exports.page_tab = {
  /**
   * 탭 버튼 클릭시 해당 타겟 show 하는 함수
   * @param {object} params {'target': str, 'default': num}
   * @desc target : 해당 타켓
   * @desc default : 화면 로드 시 초기 액티브 index
   */
  showContent(key) {
    $('.wrap-component').removeClass('pt_page_hide');
    $(`[data-page-content]`).each((idx, item) => {
      const $this = $(item);
      $this.attr('data-page-content') == key ? $this.removeClass('pt_page_hide') : $this.addClass('pt_page_hide');
      if ($this.find('.pt_component_tab').length > 0 && $this.attr('data-page-content') != key) {
        const $comp = $this.closest('.sec_project_wrap').nextAll('.wrap-component');
        const compLength = $this.find('.pt_component_tab .pt_slider_category_sticky a').length;
        for (let i = 0; i < compLength; i++) {
          $comp.eq(i).addClass('pt_page_hide');
        }
      }
    });
  },
  init(params) {
    const $tabBtn = _bs_common.PT_STATE.$PROJECT.find('[data-page-tab].on');
    const defaultKey = $tabBtn.attr('data-page-tab');

    //탭 클릭시 타겟 show
    _bs_common.PT_STATE.$PROJECT.off('click.clickPageTab').on('click.clickPageTab', '[data-page-tab]', function (e) {
      e.preventDefault();
      const $this = $(this);
      if ($this.hasClass('on')) return;
      const tagetKey = $this.attr('data-page-tab');
      page_tab.showContent(tagetKey);

      //a11y
      $this.siblings().find('.selected_option').remove();
      $this.addClass('on').siblings().removeClass('on');
      $this.append('<span class="blind selected_option">선택됨</span>');

      // if(firstPass === false){ //처음 접속시 포커스 제거
      //     $(target).attr('tabindex', 0);
      //     data.params.forEach(function(item, index){
      //         if(item.el === $tabTarget){
      //             // 앵커이동
      //             if(item.anc === true){ 
      //                 $('html, body').stop().animate({scrollTop:$(target).offset().top - $($tabTarget).outerHeight() }, 500, function(){
      //                     $(target).focusout(function(){
      //                         $(target).removeAttr('tabindex');
      //                     });
      //                 });
      //             }else{
      //                 $(target).focusout(function(){
      //                     $(target).removeAttr('tabindex');
      //                 });
      //             }
      //         }
      //     });
      //     $(target).focus();
      // }

      // if(_idx === 'all'){
      //     $(target).each((idx, item) => {
      //         $(item).children().show();
      //     })
      //     return;
      // }

      // $(target).each((idx, item) => {
      //     $(item).children().eq(_idx).show().siblings().hide();
      // })
    });

    //초기값 제외 hide 처리
    // Object.values(data.params).forEach((item, idx) => {
    //     const { el, default: _index = 0 } = item;

    //     $(el).children().eq(_index).trigger('click');

    //     if(idx === Object.values(data.params).length-1){
    //         firstPass = false;
    //     }
    // });

    this.showContent(defaultKey);
  }
};

},{"./bs_common":4}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sticky = void 0;
var _bs_common = require("./bs_common");
const sticky = exports.sticky = {
  init() {
    // bespoke 청소기
    let tabIndex = 0;
    function setBlindTxt($this) {
      $this.closest('.sec_nav').find('li a .blind').remove();
      $this.append('<span class="blind">선택됨</span>');
    }
    const navArr = ['#sec_nav_com', '#sec_nav_sys'];
    let stickyMove = function () {
      const scrollTop = $(window).scrollTop();
      navArr.forEach(item => {
        if ($(item).hasClass('pt_page_hide')) return false;
        const $secNav = $(item);
        const $nav = $secNav.find('.pt_sticky');
        const _navHeight = $nav.outerHeight();
        const ancArr = $nav.find('[data-role-anchor]');
        if (scrollTop >= $secNav.offset().top) {
          // 240216 푸터 조건 삭제 && scrollTop <= $('.sec_notice').offset().top - _navHeight
          $nav.addClass('pt_fixed');
        } else {
          $nav.removeClass('pt_fixed');
        }
        for (let i = 0; i < ancArr.length; i++) {
          const $btn = $(ancArr[i]);
          const target = $btn.attr('data-target');
          const nextTarget = i + 1 == ancArr.length ? '.sec_notice' : $(ancArr[i + 1]).attr('data-target');
          if (scrollTop >= $(target).offset().top + _bs_common.util.pxToVw(-100, -120) && scrollTop < $(nextTarget).offset().top + _bs_common.util.pxToVw(-100, -120)) {
            const $sibing = $btn.closest('li').siblings().find('[data-role-anchor]');
            $sibing.removeClass('on');
            $btn.addClass('on');
            setBlindTxt($btn);
            break;
          }
          ;
        }
      });
    };
    stickyMove();
    $(window).on('scroll.sticky', stickyMove);
  }
};

},{"./bs_common":4}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tab = void 0;
var _bs_common = require("./bs_common");
const tab = exports.tab = {
  /**
   * 탭 버튼 클릭시 해당 타겟 show 하는 함수
   * @param {object} params {'target': str, 'default': num}
   * @desc target : 해당 타켓
   * @desc default : 화면 로드 시 초기 액티브 index
   */
  click(params) {
    _bs_common.util.setEventState('clickTab', params);
    let firstPass = true;
    const data = {
      params: _bs_common.util.getEventState('clickTab')
    };

    //탭 클릭시 타겟 show
    _bs_common.PT_STATE.$PROJECT.off('click.clickTab').on('click.clickTab', '[data-role-tab] > a', function (e) {
      e.preventDefault();
      const $this = $(this);
      if ($this.hasClass('active')) return;
      const $parent = $this.closest('[data-role-tab]');
      const $tabTarget = `[data-role-tab="${$parent.attr('data-role-tab')}"]`;
      const {
        target
      } = _bs_common.util.findItem(data.params, 'el', $tabTarget);
      const _idx = $this.attr('data-tab-idx');

      //a11y
      $parent.find('.selected_option').remove();
      $this.addClass('active').siblings().removeClass('active');
      $this.append('<span class="blind selected_option">선택됨</span>');
      if (firstPass === false) {
        //처음 접속시 포커스 제거
        $(target).attr('tabindex', 0);
        data.params.forEach(function (item, index) {
          if (item.el === $tabTarget) {
            // 앵커이동
            if (item.anc === true) {
              $('html, body').stop().animate({
                scrollTop: $(target).offset().top - $($tabTarget).outerHeight()
              }, 500, function () {
                $(target).focusout(function () {
                  $(target).removeAttr('tabindex');
                });
              });
            } else {
              $(target).focusout(function () {
                $(target).removeAttr('tabindex');
              });
            }
          }
        });
        $(target).focus();
      }
      if (_idx === 'all') {
        $(target).each((idx, item) => {
          $(item).children().show();
        });
        return;
      }
      $(target).each((idx, item) => {
        $(item).children().eq(_idx).show().siblings().hide();
      });
    });

    //초기값 제외 hide 처리
    Object.values(data.params).forEach((item, idx) => {
      const {
        el,
        default: _index = 0
      } = item;
      $(el).children().eq(_index).trigger('click');
      if (idx === Object.values(data.params).length - 1) {
        firstPass = false;
      }
    });
  }
};

},{"./bs_common":4}]},{},[2]);
