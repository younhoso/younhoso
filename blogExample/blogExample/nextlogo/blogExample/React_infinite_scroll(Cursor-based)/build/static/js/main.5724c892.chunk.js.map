{"version":3,"sources":["api.js","components/FoodList.js","components/App.js","index.js"],"names":["getFoods","order","cursor","limit","query","fetch","response","json","body","formatDate","value","date","Date","getFullYear","getMonth","getDate","FoodListItem","item","onDelete","imgUrl","title","calorie","content","createdAt","className","src","alt","onClick","id","FoodList","items","map","App","useState","setOrder","setCursor","setItems","handleLoad","orderQuery","foods","nextCursor","paging","prevItems","sortedItems","sort","a","b","useEffect","nextItems","filter","ReactDOM","render","document","getElementById"],"mappings":"oLAAO,SAAeA,EAAtB,kC,sDAAO,0HAA0BC,aAA1B,MAAkC,GAAlC,MAAsCC,cAAtC,MAA+C,GAA/C,MAAmDC,aAAnD,MAA2D,GAA3D,EACCC,EADD,gBACkBH,EADlB,mBACkCC,EADlC,kBACkDC,GADlD,SAEkBE,MAAM,qCAAD,OAAsCD,IAF7D,cAECE,EAFD,gBAGcA,EAASC,OAHvB,cAGCC,EAHD,yBAIEA,GAJF,4C,uCCEP,SAASC,EAAWC,GAClB,IAAMC,EAAO,IAAIC,KAAKF,GACtB,MAAM,GAAN,OAAUC,EAAKE,cAAf,aAAiCF,EAAKG,WAAa,EAAnD,aAAyDH,EAAKI,UAC/D,CAED,SAASC,EAAT,GAA2C,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACpBC,EAA+CF,EAA/CE,OAAQC,EAAuCH,EAAvCG,MAAOC,EAAgCJ,EAAhCI,QAASC,EAAuBL,EAAvBK,QAASC,EAAcN,EAAdM,UAIzC,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKC,IAAKN,EAAQO,IAAKN,IACvB,8BAAMA,IACN,8BAAMC,IACN,8BAAMC,IACN,8BAAMb,EAAWc,KACjB,wBAAQI,QATc,kBAAMT,EAASD,EAAKW,GAApB,EAStB,4BAGL,CAccC,MAZf,YAAwC,IAApBC,EAAmB,EAAnBA,MAAOZ,EAAY,EAAZA,SACzB,OACE,oBAAIM,UAAU,WAAd,SACGM,EAAMC,KAAI,SAACd,GAAD,OACT,6BACE,cAACD,EAAD,CAAcC,KAAMA,EAAMC,SAAUA,KAD7BD,EAAKW,GADL,KAOhB,ECccI,MA5Cf,WACE,MAA0BC,mBAAS,aAAnC,mBAAOhC,EAAP,KAAciC,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAAO/B,EAAP,KAAeiC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOH,EAAP,KAAcM,EAAd,KAWMC,EAAU,iDAAG,WAAOC,GAAP,qGAC+BtC,EAASsC,GADxC,gBACTC,EADS,EACTA,MAAiBC,EADR,EACFC,OAAUD,WACrBF,EAAWpC,OAGbkC,GAAS,SAACM,GAAD,4BAAmBA,GAAnB,YAAiCH,GAAjC,IAFTH,EAASG,GAIXJ,EAAUK,GAPO,2CAAH,sDAcVG,EAAcb,EAAMc,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE7C,GAAS4C,EAAE5C,EAAvB,IAM/B,OAJA8C,qBAAU,WACRV,EAAW,CAACpC,SACb,GAAE,CAACA,IAGF,gCACE,wBAAQ0B,QA/Bc,kBAAMO,EAAS,YAAf,EA+BtB,gCACA,wBAAQP,QA9Be,kBAAMO,EAAS,UAAf,EA8BvB,sCACA,cAAC,EAAD,CAAUJ,MAAOa,EAAazB,SA7Bb,SAACU,GACpB,IAAMoB,EAAYlB,EAAMmB,QAAO,SAAChC,GAAD,OAAUA,EAAKW,KAAOA,CAAtB,IAC/BQ,EAASY,EACV,IA2BI9C,GAAU,wBAAQyB,QAfA,WACrBU,EAAW,CAACpC,QAAOC,UACpB,EAac,kCAGhB,EC3CDgD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.5724c892.chunk.js","sourcesContent":["export async function getFoods({ order = '', cursor = '', limit = 10 }) {\n  const query = `order=${order}&cursor=${cursor}&limit=${limit}`;\n  const response = await fetch(`https://learn.codeit.kr/api/foods?${query}`);\n  const body = await response.json();\n  return body;\n}\n","import './FoodList.css';\n\nfunction formatDate(value) {\n  const date = new Date(value);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\n\nfunction FoodListItem({ item, onDelete }) {\n  const { imgUrl, title, calorie, content, createdAt } = item;\n\n  const handleDeleteClick = () => onDelete(item.id);\n\n  return (\n    <div className=\"FoodListItem\">\n      <img src={imgUrl} alt={title} />\n      <div>{title}</div>\n      <div>{calorie}</div>\n      <div>{content}</div>\n      <div>{formatDate(createdAt)}</div>\n      <button onClick={handleDeleteClick}>삭제</button>\n    </div>\n  );\n}\n\nfunction FoodList({ items, onDelete }) {\n  return (\n    <ul className=\"FoodList\">\n      {items.map((item) => (\n        <li key={item.id}>\n          <FoodListItem item={item} onDelete={onDelete} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default FoodList;\n","import { useEffect, useState } from 'react';\nimport { getFoods } from '../api';\nimport FoodList from './FoodList';\n\nfunction App() {\n  const [order, setOrder] = useState('createdAt');\n  const [cursor, setCursor] = useState('');\n  const [items, setItems] = useState([]);\n\n  const handleNewestClick = () => setOrder('createdAt');\n\n  const handleCalorieClick = () => setOrder('calorie');\n\n  const handleDelete = (id) => {\n    const nextItems = items.filter((item) => item.id !== id);\n    setItems(nextItems);\n  };\n\n  const handleLoad = async (orderQuery) => {\n    const { foods, paging: { nextCursor } } = await getFoods(orderQuery);\n    if(!orderQuery.cursor){\n      setItems(foods);\n    } else {\n      setItems((prevItems) => [...prevItems, ...foods]);\n    }\n    setCursor(nextCursor);\n  };\n\n  const handleLoadMore = () => {\n    handleLoad({order, cursor});\n  };\n\n  const sortedItems = items.sort((a, b) => b[order] - a[order]);\n\n  useEffect(() => {\n    handleLoad({order});\n  }, [order]);\n\n  return (\n    <div>\n      <button onClick={handleNewestClick}>최신순</button>\n      <button onClick={handleCalorieClick}>칼로리순</button>\n      <FoodList items={sortedItems} onDelete={handleDelete} />\n      {cursor && <button onClick={handleLoadMore}>더보기</button>}\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}